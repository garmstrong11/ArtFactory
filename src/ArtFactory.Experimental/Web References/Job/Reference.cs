//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ArtFactory.Experimental.Job {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Job_SSPSoap", Namespace="XMPieWSAPI")]
    public partial class Job_SSP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFolderPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileToOutputResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFilesToOutputResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOutputResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultBinaryFileStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultBinaryFileStreamChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultBinaryFileStreamSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputResultDownloadURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXMPTblDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetProgressStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesXMPTblDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesHighestSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignShortcutInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTouchPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTouchPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Job_SSP() {
            this.Url = global::ArtFactory.Experimental.Properties.Settings.Default.ArtFactory_Experimental_Job_Job_SSP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFolderPathCompletedEventHandler GetFolderPathCompleted;
        
        /// <remarks/>
        public event GetOutputResultsCompletedEventHandler GetOutputResultsCompleted;
        
        /// <remarks/>
        public event AddFileToOutputResultsCompletedEventHandler AddFileToOutputResultsCompleted;
        
        /// <remarks/>
        public event AddFilesToOutputResultsCompletedEventHandler AddFilesToOutputResultsCompleted;
        
        /// <remarks/>
        public event DeleteOutputResultsCompletedEventHandler DeleteOutputResultsCompleted;
        
        /// <remarks/>
        public event GetOutputResultsInfoCompletedEventHandler GetOutputResultsInfoCompleted;
        
        /// <remarks/>
        public event GetOutputResultBinaryFileStreamCompletedEventHandler GetOutputResultBinaryFileStreamCompleted;
        
        /// <remarks/>
        public event GetOutputResultBinaryFileStreamChunkCompletedEventHandler GetOutputResultBinaryFileStreamChunkCompleted;
        
        /// <remarks/>
        public event GetOutputResultBinaryFileStreamSizeCompletedEventHandler GetOutputResultBinaryFileStreamSizeCompleted;
        
        /// <remarks/>
        public event GetOutputResultDownloadURLCompletedEventHandler GetOutputResultDownloadURLCompleted;
        
        /// <remarks/>
        public event GetPropertyCompletedEventHandler GetPropertyCompleted;
        
        /// <remarks/>
        public event GetPropertiesCompletedEventHandler GetPropertiesCompleted;
        
        /// <remarks/>
        public event GetAllPropertiesCompletedEventHandler GetAllPropertiesCompleted;
        
        /// <remarks/>
        public event GetDataSetCompletedEventHandler GetDataSetCompleted;
        
        /// <remarks/>
        public event GetXMPTblDataSetCompletedEventHandler GetXMPTblDataSetCompleted;
        
        /// <remarks/>
        public event SetPropertyCompletedEventHandler SetPropertyCompleted;
        
        /// <remarks/>
        public event SetPropertiesCompletedEventHandler SetPropertiesCompleted;
        
        /// <remarks/>
        public event AbortCompletedEventHandler AbortCompleted;
        
        /// <remarks/>
        public event ReQueueCompletedEventHandler ReQueueCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event SetProgressStatusCompletedEventHandler SetProgressStatusCompleted;
        
        /// <remarks/>
        public event GetTicketCompletedEventHandler GetTicketCompleted;
        
        /// <remarks/>
        public event GetMessagesCompletedEventHandler GetMessagesCompleted;
        
        /// <remarks/>
        public event GetMessagesDataSetCompletedEventHandler GetMessagesDataSetCompleted;
        
        /// <remarks/>
        public event GetMessagesXMPTblDataSetCompletedEventHandler GetMessagesXMPTblDataSetCompleted;
        
        /// <remarks/>
        public event GetMessagesNumCompletedEventHandler GetMessagesNumCompleted;
        
        /// <remarks/>
        public event GetMessagesHighestSeverityCompletedEventHandler GetMessagesHighestSeverityCompleted;
        
        /// <remarks/>
        public event DeleteMessagesCompletedEventHandler DeleteMessagesCompleted;
        
        /// <remarks/>
        public event GetCampaignShortcutInfoCompletedEventHandler GetCampaignShortcutInfoCompleted;
        
        /// <remarks/>
        public event GetTouchPointCompletedEventHandler GetTouchPointCompleted;
        
        /// <remarks/>
        public event SetTouchPointCompletedEventHandler SetTouchPointCompleted;
        
        /// <remarks/>
        public event IsExistCompletedEventHandler IsExistCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetFolderPath", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFolderPath(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetFolderPath", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderPathAsync(string inUsername, string inPassword, string inJobID) {
            this.GetFolderPathAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetFolderPathAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetFolderPathOperationCompleted == null)) {
                this.GetFolderPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderPathOperationCompleted);
            }
            this.InvokeAsync("GetFolderPath", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetFolderPathOperationCompleted, userState);
        }
        
        private void OnGetFolderPathOperationCompleted(object arg) {
            if ((this.GetFolderPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderPathCompleted(this, new GetFolderPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResults", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetOutputResults(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultsAsync(string inUsername, string inPassword, string inJobID) {
            this.GetOutputResultsAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetOutputResultsAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetOutputResultsOperationCompleted == null)) {
                this.GetOutputResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultsOperationCompleted);
            }
            this.InvokeAsync("GetOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetOutputResultsOperationCompleted, userState);
        }
        
        private void OnGetOutputResultsOperationCompleted(object arg) {
            if ((this.GetOutputResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultsCompleted(this, new GetOutputResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/AddFileToOutputResults", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFileToOutputResults(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Property[] inProps) {
            object[] results = this.Invoke("AddFileToOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inFilePath,
                        inDeleteSource,
                        inDeleteEmptySourceFolder,
                        inProps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, Property[] inProps) {
            this.AddFileToOutputResultsAsync(inUsername, inPassword, inJobID, inFilePath, inDeleteSource, inDeleteEmptySourceFolder, inProps, null);
        }
        
        /// <remarks/>
        public void AddFileToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, Property[] inProps, object userState) {
            if ((this.AddFileToOutputResultsOperationCompleted == null)) {
                this.AddFileToOutputResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileToOutputResultsOperationCompleted);
            }
            this.InvokeAsync("AddFileToOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inFilePath,
                        inDeleteSource,
                        inDeleteEmptySourceFolder,
                        inProps}, this.AddFileToOutputResultsOperationCompleted, userState);
        }
        
        private void OnAddFileToOutputResultsOperationCompleted(object arg) {
            if ((this.AddFileToOutputResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileToOutputResultsCompleted(this, new AddFileToOutputResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/AddFilesToOutputResults", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFilesToOutputResults(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Property[] inProps) {
            object[] results = this.Invoke("AddFilesToOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inSourceFolder,
                        inDeleteSource,
                        inProps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFilesToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, Property[] inProps) {
            this.AddFilesToOutputResultsAsync(inUsername, inPassword, inJobID, inSourceFolder, inDeleteSource, inProps, null);
        }
        
        /// <remarks/>
        public void AddFilesToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, Property[] inProps, object userState) {
            if ((this.AddFilesToOutputResultsOperationCompleted == null)) {
                this.AddFilesToOutputResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFilesToOutputResultsOperationCompleted);
            }
            this.InvokeAsync("AddFilesToOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inSourceFolder,
                        inDeleteSource,
                        inProps}, this.AddFilesToOutputResultsOperationCompleted, userState);
        }
        
        private void OnAddFilesToOutputResultsOperationCompleted(object arg) {
            if ((this.AddFilesToOutputResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFilesToOutputResultsCompleted(this, new AddFilesToOutputResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/DeleteOutputResults", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteOutputResults(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("DeleteOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOutputResultsAsync(string inUsername, string inPassword, string inJobID) {
            this.DeleteOutputResultsAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void DeleteOutputResultsAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.DeleteOutputResultsOperationCompleted == null)) {
                this.DeleteOutputResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOutputResultsOperationCompleted);
            }
            this.InvokeAsync("DeleteOutputResults", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.DeleteOutputResultsOperationCompleted, userState);
        }
        
        private void OnDeleteOutputResultsOperationCompleted(object arg) {
            if ((this.DeleteOutputResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOutputResultsCompleted(this, new DeleteOutputResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResultsInfo", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public OutputResult[] GetOutputResultsInfo(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetOutputResultsInfo", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((OutputResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultsInfoAsync(string inUsername, string inPassword, string inJobID) {
            this.GetOutputResultsInfoAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetOutputResultsInfoAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetOutputResultsInfoOperationCompleted == null)) {
                this.GetOutputResultsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultsInfoOperationCompleted);
            }
            this.InvokeAsync("GetOutputResultsInfo", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetOutputResultsInfoOperationCompleted, userState);
        }
        
        private void OnGetOutputResultsInfoOperationCompleted(object arg) {
            if ((this.GetOutputResultsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultsInfoCompleted(this, new GetOutputResultsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResultBinaryFileStream", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOutputResultBinaryFileStream(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            object[] results = this.Invoke("GetOutputResultBinaryFileStream", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamAsync(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            this.GetOutputResultBinaryFileStreamAsync(inUsername, inPassword, inJobID, inResultIndex, null);
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, object userState) {
            if ((this.GetOutputResultBinaryFileStreamOperationCompleted == null)) {
                this.GetOutputResultBinaryFileStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultBinaryFileStreamOperationCompleted);
            }
            this.InvokeAsync("GetOutputResultBinaryFileStream", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex}, this.GetOutputResultBinaryFileStreamOperationCompleted, userState);
        }
        
        private void OnGetOutputResultBinaryFileStreamOperationCompleted(object arg) {
            if ((this.GetOutputResultBinaryFileStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultBinaryFileStreamCompleted(this, new GetOutputResultBinaryFileStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResultBinaryFileStreamChunk", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOutputResultBinaryFileStreamChunk(string inUsername, string inPassword, string inJobID, int inResultIndex, uint inOffset, ref int inoutCount) {
            object[] results = this.Invoke("GetOutputResultBinaryFileStreamChunk", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex,
                        inOffset,
                        inoutCount});
            inoutCount = ((int)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamChunkAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, uint inOffset, int inoutCount) {
            this.GetOutputResultBinaryFileStreamChunkAsync(inUsername, inPassword, inJobID, inResultIndex, inOffset, inoutCount, null);
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamChunkAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, uint inOffset, int inoutCount, object userState) {
            if ((this.GetOutputResultBinaryFileStreamChunkOperationCompleted == null)) {
                this.GetOutputResultBinaryFileStreamChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultBinaryFileStreamChunkOperationCompleted);
            }
            this.InvokeAsync("GetOutputResultBinaryFileStreamChunk", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex,
                        inOffset,
                        inoutCount}, this.GetOutputResultBinaryFileStreamChunkOperationCompleted, userState);
        }
        
        private void OnGetOutputResultBinaryFileStreamChunkOperationCompleted(object arg) {
            if ((this.GetOutputResultBinaryFileStreamChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultBinaryFileStreamChunkCompleted(this, new GetOutputResultBinaryFileStreamChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResultBinaryFileStreamSize", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetOutputResultBinaryFileStreamSize(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            object[] results = this.Invoke("GetOutputResultBinaryFileStreamSize", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamSizeAsync(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            this.GetOutputResultBinaryFileStreamSizeAsync(inUsername, inPassword, inJobID, inResultIndex, null);
        }
        
        /// <remarks/>
        public void GetOutputResultBinaryFileStreamSizeAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, object userState) {
            if ((this.GetOutputResultBinaryFileStreamSizeOperationCompleted == null)) {
                this.GetOutputResultBinaryFileStreamSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultBinaryFileStreamSizeOperationCompleted);
            }
            this.InvokeAsync("GetOutputResultBinaryFileStreamSize", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex}, this.GetOutputResultBinaryFileStreamSizeOperationCompleted, userState);
        }
        
        private void OnGetOutputResultBinaryFileStreamSizeOperationCompleted(object arg) {
            if ((this.GetOutputResultBinaryFileStreamSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultBinaryFileStreamSizeCompleted(this, new GetOutputResultBinaryFileStreamSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetOutputResultDownloadURL", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOutputResultDownloadURL(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL) {
            object[] results = this.Invoke("GetOutputResultDownloadURL", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex,
                        inMimeType,
                        inIsInline,
                        inMacTypeHex,
                        inMacCreatorHex,
                        inReturnInternalURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputResultDownloadURLAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL) {
            this.GetOutputResultDownloadURLAsync(inUsername, inPassword, inJobID, inResultIndex, inMimeType, inIsInline, inMacTypeHex, inMacCreatorHex, inReturnInternalURL, null);
        }
        
        /// <remarks/>
        public void GetOutputResultDownloadURLAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL, object userState) {
            if ((this.GetOutputResultDownloadURLOperationCompleted == null)) {
                this.GetOutputResultDownloadURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputResultDownloadURLOperationCompleted);
            }
            this.InvokeAsync("GetOutputResultDownloadURL", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inResultIndex,
                        inMimeType,
                        inIsInline,
                        inMacTypeHex,
                        inMacCreatorHex,
                        inReturnInternalURL}, this.GetOutputResultDownloadURLOperationCompleted, userState);
        }
        
        private void OnGetOutputResultDownloadURLOperationCompleted(object arg) {
            if ((this.GetOutputResultDownloadURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputResultDownloadURLCompleted(this, new GetOutputResultDownloadURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetProperty", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Property GetProperty(string inUsername, string inPassword, string inJobID, string inPropertyName) {
            object[] results = this.Invoke("GetProperty", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inPropertyName});
            return ((Property)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyAsync(string inUsername, string inPassword, string inJobID, string inPropertyName) {
            this.GetPropertyAsync(inUsername, inPassword, inJobID, inPropertyName, null);
        }
        
        /// <remarks/>
        public void GetPropertyAsync(string inUsername, string inPassword, string inJobID, string inPropertyName, object userState) {
            if ((this.GetPropertyOperationCompleted == null)) {
                this.GetPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyOperationCompleted);
            }
            this.InvokeAsync("GetProperty", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inPropertyName}, this.GetPropertyOperationCompleted, userState);
        }
        
        private void OnGetPropertyOperationCompleted(object arg) {
            if ((this.GetPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyCompleted(this, new GetPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetProperties", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Property[] GetProperties(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inPropertiesNames});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesAsync(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames) {
            this.GetPropertiesAsync(inUsername, inPassword, inJobID, inPropertiesNames, null);
        }
        
        /// <remarks/>
        public void GetPropertiesAsync(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames, object userState) {
            if ((this.GetPropertiesOperationCompleted == null)) {
                this.GetPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inPropertiesNames}, this.GetPropertiesOperationCompleted, userState);
        }
        
        private void OnGetPropertiesOperationCompleted(object arg) {
            if ((this.GetPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesCompleted(this, new GetPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetAllProperties", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Property[] GetAllProperties(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetAllProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropertiesAsync(string inUsername, string inPassword, string inJobID) {
            this.GetAllPropertiesAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetAllPropertiesAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetAllPropertiesOperationCompleted == null)) {
                this.GetAllPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetAllProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetAllPropertiesOperationCompleted, userState);
        }
        
        private void OnGetAllPropertiesOperationCompleted(object arg) {
            if ((this.GetAllPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropertiesCompleted(this, new GetAllPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetDataSet", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSet(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string inUsername, string inPassword, string inJobID) {
            this.GetDataSetAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetDataSetAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetDataSetOperationCompleted == null)) {
                this.GetDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetDataSetOperationCompleted, userState);
        }
        
        private void OnGetDataSetOperationCompleted(object arg) {
            if ((this.GetDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetCompleted(this, new GetDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetXMPTblDataSet", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XMPTblDataSet GetXMPTblDataSet(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetXMPTblDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((XMPTblDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID) {
            this.GetXMPTblDataSetAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetXMPTblDataSetOperationCompleted == null)) {
                this.GetXMPTblDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXMPTblDataSetOperationCompleted);
            }
            this.InvokeAsync("GetXMPTblDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetXMPTblDataSetOperationCompleted, userState);
        }
        
        private void OnGetXMPTblDataSetOperationCompleted(object arg) {
            if ((this.GetXMPTblDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXMPTblDataSetCompleted(this, new GetXMPTblDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/SetProperty", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetProperty(string inUsername, string inPassword, string inJobID, Property inProp) {
            object[] results = this.Invoke("SetProperty", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProp});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPropertyAsync(string inUsername, string inPassword, string inJobID, Property inProp) {
            this.SetPropertyAsync(inUsername, inPassword, inJobID, inProp, null);
        }
        
        /// <remarks/>
        public void SetPropertyAsync(string inUsername, string inPassword, string inJobID, Property inProp, object userState) {
            if ((this.SetPropertyOperationCompleted == null)) {
                this.SetPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertyOperationCompleted);
            }
            this.InvokeAsync("SetProperty", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProp}, this.SetPropertyOperationCompleted, userState);
        }
        
        private void OnSetPropertyOperationCompleted(object arg) {
            if ((this.SetPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPropertyCompleted(this, new SetPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/SetProperties", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetProperties(string inUsername, string inPassword, string inJobID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Property[] inProps) {
            object[] results = this.Invoke("SetProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPropertiesAsync(string inUsername, string inPassword, string inJobID, Property[] inProps) {
            this.SetPropertiesAsync(inUsername, inPassword, inJobID, inProps, null);
        }
        
        /// <remarks/>
        public void SetPropertiesAsync(string inUsername, string inPassword, string inJobID, Property[] inProps, object userState) {
            if ((this.SetPropertiesOperationCompleted == null)) {
                this.SetPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertiesOperationCompleted);
            }
            this.InvokeAsync("SetProperties", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProps}, this.SetPropertiesOperationCompleted, userState);
        }
        
        private void OnSetPropertiesOperationCompleted(object arg) {
            if ((this.SetPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPropertiesCompleted(this, new SetPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/Abort", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Abort(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("Abort", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AbortAsync(string inUsername, string inPassword, string inJobID) {
            this.AbortAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void AbortAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.AbortOperationCompleted == null)) {
                this.AbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortOperationCompleted);
            }
            this.InvokeAsync("Abort", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.AbortOperationCompleted, userState);
        }
        
        private void OnAbortOperationCompleted(object arg) {
            if ((this.AbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbortCompleted(this, new AbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/ReQueue", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReQueue(string inUsername, string inPassword, string inJobID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Property[] inProps) {
            object[] results = this.Invoke("ReQueue", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReQueueAsync(string inUsername, string inPassword, string inJobID, Property[] inProps) {
            this.ReQueueAsync(inUsername, inPassword, inJobID, inProps, null);
        }
        
        /// <remarks/>
        public void ReQueueAsync(string inUsername, string inPassword, string inJobID, Property[] inProps, object userState) {
            if ((this.ReQueueOperationCompleted == null)) {
                this.ReQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReQueueOperationCompleted);
            }
            this.InvokeAsync("ReQueue", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProps}, this.ReQueueOperationCompleted, userState);
        }
        
        private void OnReQueueOperationCompleted(object arg) {
            if ((this.ReQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReQueueCompleted(this, new ReQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/Delete", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("Delete", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string inUsername, string inPassword, string inJobID) {
            this.DeleteAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetStatus", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStatus(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(string inUsername, string inPassword, string inJobID) {
            this.GetStatusAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/SetProgressStatus", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetProgressStatus(string inUsername, string inPassword, string inJobID, string inProgressMethod, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Property[] inProgressProps) {
            object[] results = this.Invoke("SetProgressStatus", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProgressMethod,
                        inProgressProps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetProgressStatusAsync(string inUsername, string inPassword, string inJobID, string inProgressMethod, Property[] inProgressProps) {
            this.SetProgressStatusAsync(inUsername, inPassword, inJobID, inProgressMethod, inProgressProps, null);
        }
        
        /// <remarks/>
        public void SetProgressStatusAsync(string inUsername, string inPassword, string inJobID, string inProgressMethod, Property[] inProgressProps, object userState) {
            if ((this.SetProgressStatusOperationCompleted == null)) {
                this.SetProgressStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProgressStatusOperationCompleted);
            }
            this.InvokeAsync("SetProgressStatus", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inProgressMethod,
                        inProgressProps}, this.SetProgressStatusOperationCompleted, userState);
        }
        
        private void OnSetProgressStatusOperationCompleted(object arg) {
            if ((this.SetProgressStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetProgressStatusCompleted(this, new SetProgressStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetTicket", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTicket(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetTicket", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketAsync(string inUsername, string inPassword, string inJobID) {
            this.GetTicketAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetTicketAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetTicketOperationCompleted == null)) {
                this.GetTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketOperationCompleted);
            }
            this.InvokeAsync("GetTicket", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetTicketOperationCompleted, userState);
        }
        
        private void OnGetTicketOperationCompleted(object arg) {
            if ((this.GetTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketCompleted(this, new GetTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetMessages", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMessages(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetMessages", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string inUsername, string inPassword, string inJobID) {
            this.GetMessagesAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetMessagesOperationCompleted == null)) {
                this.GetMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesOperationCompleted);
            }
            this.InvokeAsync("GetMessages", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetMessagesOperationCompleted, userState);
        }
        
        private void OnGetMessagesOperationCompleted(object arg) {
            if ((this.GetMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetMessagesDataSet", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessagesDataSet(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetMessagesDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesDataSetAsync(string inUsername, string inPassword, string inJobID) {
            this.GetMessagesDataSetAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetMessagesDataSetAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetMessagesDataSetOperationCompleted == null)) {
                this.GetMessagesDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesDataSetOperationCompleted);
            }
            this.InvokeAsync("GetMessagesDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetMessagesDataSetOperationCompleted, userState);
        }
        
        private void OnGetMessagesDataSetOperationCompleted(object arg) {
            if ((this.GetMessagesDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesDataSetCompleted(this, new GetMessagesDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetMessagesXMPTblDataSet", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XMPTblDataSet GetMessagesXMPTblDataSet(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetMessagesXMPTblDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((XMPTblDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID) {
            this.GetMessagesXMPTblDataSetAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetMessagesXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetMessagesXMPTblDataSetOperationCompleted == null)) {
                this.GetMessagesXMPTblDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesXMPTblDataSetOperationCompleted);
            }
            this.InvokeAsync("GetMessagesXMPTblDataSet", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetMessagesXMPTblDataSetOperationCompleted, userState);
        }
        
        private void OnGetMessagesXMPTblDataSetOperationCompleted(object arg) {
            if ((this.GetMessagesXMPTblDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesXMPTblDataSetCompleted(this, new GetMessagesXMPTblDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetMessagesNum", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMessagesNum(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetMessagesNum", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesNumAsync(string inUsername, string inPassword, string inJobID) {
            this.GetMessagesNumAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetMessagesNumAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetMessagesNumOperationCompleted == null)) {
                this.GetMessagesNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesNumOperationCompleted);
            }
            this.InvokeAsync("GetMessagesNum", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetMessagesNumOperationCompleted, userState);
        }
        
        private void OnGetMessagesNumOperationCompleted(object arg) {
            if ((this.GetMessagesNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesNumCompleted(this, new GetMessagesNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetMessagesHighestSeverity", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMessagesHighestSeverity(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetMessagesHighestSeverity", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesHighestSeverityAsync(string inUsername, string inPassword, string inJobID) {
            this.GetMessagesHighestSeverityAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetMessagesHighestSeverityAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetMessagesHighestSeverityOperationCompleted == null)) {
                this.GetMessagesHighestSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesHighestSeverityOperationCompleted);
            }
            this.InvokeAsync("GetMessagesHighestSeverity", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetMessagesHighestSeverityOperationCompleted, userState);
        }
        
        private void OnGetMessagesHighestSeverityOperationCompleted(object arg) {
            if ((this.GetMessagesHighestSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesHighestSeverityCompleted(this, new GetMessagesHighestSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/DeleteMessages", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMessages(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("DeleteMessages", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessagesAsync(string inUsername, string inPassword, string inJobID) {
            this.DeleteMessagesAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void DeleteMessagesAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.DeleteMessagesOperationCompleted == null)) {
                this.DeleteMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessagesOperationCompleted);
            }
            this.InvokeAsync("DeleteMessages", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.DeleteMessagesOperationCompleted, userState);
        }
        
        private void OnDeleteMessagesOperationCompleted(object arg) {
            if ((this.DeleteMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessagesCompleted(this, new DeleteMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetCampaignShortcutInfo", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CampaignShortcutInfo GetCampaignShortcutInfo(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetCampaignShortcutInfo", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((CampaignShortcutInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignShortcutInfoAsync(string inUsername, string inPassword, string inJobID) {
            this.GetCampaignShortcutInfoAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetCampaignShortcutInfoAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetCampaignShortcutInfoOperationCompleted == null)) {
                this.GetCampaignShortcutInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignShortcutInfoOperationCompleted);
            }
            this.InvokeAsync("GetCampaignShortcutInfo", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetCampaignShortcutInfoOperationCompleted, userState);
        }
        
        private void OnGetCampaignShortcutInfoOperationCompleted(object arg) {
            if ((this.GetCampaignShortcutInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignShortcutInfoCompleted(this, new GetCampaignShortcutInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/GetTouchPoint", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTouchPoint(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("GetTouchPoint", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTouchPointAsync(string inUsername, string inPassword, string inJobID) {
            this.GetTouchPointAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void GetTouchPointAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.GetTouchPointOperationCompleted == null)) {
                this.GetTouchPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTouchPointOperationCompleted);
            }
            this.InvokeAsync("GetTouchPoint", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.GetTouchPointOperationCompleted, userState);
        }
        
        private void OnGetTouchPointOperationCompleted(object arg) {
            if ((this.GetTouchPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTouchPointCompleted(this, new GetTouchPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/SetTouchPoint", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTouchPoint(string inUsername, string inPassword, string inJobID, string inTouchPointID) {
            object[] results = this.Invoke("SetTouchPoint", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inTouchPointID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTouchPointAsync(string inUsername, string inPassword, string inJobID, string inTouchPointID) {
            this.SetTouchPointAsync(inUsername, inPassword, inJobID, inTouchPointID, null);
        }
        
        /// <remarks/>
        public void SetTouchPointAsync(string inUsername, string inPassword, string inJobID, string inTouchPointID, object userState) {
            if ((this.SetTouchPointOperationCompleted == null)) {
                this.SetTouchPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTouchPointOperationCompleted);
            }
            this.InvokeAsync("SetTouchPoint", new object[] {
                        inUsername,
                        inPassword,
                        inJobID,
                        inTouchPointID}, this.SetTouchPointOperationCompleted, userState);
        }
        
        private void OnSetTouchPointOperationCompleted(object arg) {
            if ((this.SetTouchPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTouchPointCompleted(this, new SetTouchPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("XMPieWSAPI/IsExist", RequestNamespace="XMPieWSAPI", ResponseNamespace="XMPieWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExist(string inUsername, string inPassword, string inJobID) {
            object[] results = this.Invoke("IsExist", new object[] {
                        inUsername,
                        inPassword,
                        inJobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistAsync(string inUsername, string inPassword, string inJobID) {
            this.IsExistAsync(inUsername, inPassword, inJobID, null);
        }
        
        /// <remarks/>
        public void IsExistAsync(string inUsername, string inPassword, string inJobID, object userState) {
            if ((this.IsExistOperationCompleted == null)) {
                this.IsExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistOperationCompleted);
            }
            this.InvokeAsync("IsExist", new object[] {
                        inUsername,
                        inPassword,
                        inJobID}, this.IsExistOperationCompleted, userState);
        }
        
        private void OnIsExistOperationCompleted(object arg) {
            if ((this.IsExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistCompleted(this, new IsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class Property {
        
        private string m_NameField;
        
        private string m_ValueField;
        
        /// <remarks/>
        public string m_Name {
            get {
                return this.m_NameField;
            }
            set {
                this.m_NameField = value;
            }
        }
        
        /// <remarks/>
        public string m_Value {
            get {
                return this.m_ValueField;
            }
            set {
                this.m_ValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class CampaignShortcutInfo {
        
        private string m_AccountIDField;
        
        private string m_AccountNameField;
        
        private string m_CampaignIDField;
        
        private string m_CampaignNameField;
        
        /// <remarks/>
        public string m_AccountID {
            get {
                return this.m_AccountIDField;
            }
            set {
                this.m_AccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string m_AccountName {
            get {
                return this.m_AccountNameField;
            }
            set {
                this.m_AccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string m_CampaignID {
            get {
                return this.m_CampaignIDField;
            }
            set {
                this.m_CampaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string m_CampaignName {
            get {
                return this.m_CampaignNameField;
            }
            set {
                this.m_CampaignNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPRowField {
        
        private string m_FieldValueField;
        
        /// <remarks/>
        public string m_FieldValue {
            get {
                return this.m_FieldValueField;
            }
            set {
                this.m_FieldValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblRow {
        
        private XMPRowField[] m_FieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPRowField[] m_Fields {
            get {
                return this.m_FieldsField;
            }
            set {
                this.m_FieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblColumn {
        
        private string m_ColumnNameField;
        
        private string m_ColumnTypeField;
        
        /// <remarks/>
        public string m_ColumnName {
            get {
                return this.m_ColumnNameField;
            }
            set {
                this.m_ColumnNameField = value;
            }
        }
        
        /// <remarks/>
        public string m_ColumnType {
            get {
                return this.m_ColumnTypeField;
            }
            set {
                this.m_ColumnTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTbl {
        
        private string m_TableNameField;
        
        private XMPTblColumn[] m_ColumnNameArrayField;
        
        private XMPTblRow[] m_RowArrayField;
        
        /// <remarks/>
        public string m_TableName {
            get {
                return this.m_TableNameField;
            }
            set {
                this.m_TableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTblColumn[] m_ColumnNameArray {
            get {
                return this.m_ColumnNameArrayField;
            }
            set {
                this.m_ColumnNameArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTblRow[] m_RowArray {
            get {
                return this.m_RowArrayField;
            }
            set {
                this.m_RowArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblDataSet {
        
        private XMPTbl[] m_TablesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTbl[] m_Tables {
            get {
                return this.m_TablesField;
            }
            set {
                this.m_TablesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class OutputResult {
        
        private string m_FileNameField;
        
        private string m_FilePathField;
        
        private double m_SizeKBField;
        
        private string m_ModifDateStrField;
        
        /// <remarks/>
        public string m_FileName {
            get {
                return this.m_FileNameField;
            }
            set {
                this.m_FileNameField = value;
            }
        }
        
        /// <remarks/>
        public string m_FilePath {
            get {
                return this.m_FilePathField;
            }
            set {
                this.m_FilePathField = value;
            }
        }
        
        /// <remarks/>
        public double m_SizeKB {
            get {
                return this.m_SizeKBField;
            }
            set {
                this.m_SizeKBField = value;
            }
        }
        
        /// <remarks/>
        public string m_ModifDateStr {
            get {
                return this.m_ModifDateStrField;
            }
            set {
                this.m_ModifDateStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFolderPathCompletedEventHandler(object sender, GetFolderPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultsCompletedEventHandler(object sender, GetOutputResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddFileToOutputResultsCompletedEventHandler(object sender, AddFileToOutputResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileToOutputResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileToOutputResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddFilesToOutputResultsCompletedEventHandler(object sender, AddFilesToOutputResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFilesToOutputResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFilesToOutputResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteOutputResultsCompletedEventHandler(object sender, DeleteOutputResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOutputResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOutputResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultsInfoCompletedEventHandler(object sender, GetOutputResultsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultBinaryFileStreamCompletedEventHandler(object sender, GetOutputResultBinaryFileStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultBinaryFileStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultBinaryFileStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultBinaryFileStreamChunkCompletedEventHandler(object sender, GetOutputResultBinaryFileStreamChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultBinaryFileStreamChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultBinaryFileStreamChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int inoutCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultBinaryFileStreamSizeCompletedEventHandler(object sender, GetOutputResultBinaryFileStreamSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultBinaryFileStreamSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultBinaryFileStreamSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOutputResultDownloadURLCompletedEventHandler(object sender, GetOutputResultDownloadURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputResultDownloadURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputResultDownloadURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPropertyCompletedEventHandler(object sender, GetPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Property Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Property)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPropertiesCompletedEventHandler(object sender, GetPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Property[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Property[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllPropertiesCompletedEventHandler(object sender, GetAllPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Property[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Property[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDataSetCompletedEventHandler(object sender, GetDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetXMPTblDataSetCompletedEventHandler(object sender, GetXMPTblDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXMPTblDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXMPTblDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XMPTblDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XMPTblDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetPropertyCompletedEventHandler(object sender, SetPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetPropertiesCompletedEventHandler(object sender, SetPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AbortCompletedEventHandler(object sender, AbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReQueueCompletedEventHandler(object sender, ReQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetProgressStatusCompletedEventHandler(object sender, SetProgressStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetProgressStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetProgressStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTicketCompletedEventHandler(object sender, GetTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMessagesCompletedEventHandler(object sender, GetMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMessagesDataSetCompletedEventHandler(object sender, GetMessagesDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMessagesXMPTblDataSetCompletedEventHandler(object sender, GetMessagesXMPTblDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesXMPTblDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesXMPTblDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XMPTblDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XMPTblDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMessagesNumCompletedEventHandler(object sender, GetMessagesNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMessagesHighestSeverityCompletedEventHandler(object sender, GetMessagesHighestSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesHighestSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesHighestSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteMessagesCompletedEventHandler(object sender, DeleteMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCampaignShortcutInfoCompletedEventHandler(object sender, GetCampaignShortcutInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignShortcutInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignShortcutInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CampaignShortcutInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CampaignShortcutInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTouchPointCompletedEventHandler(object sender, GetTouchPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTouchPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTouchPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetTouchPointCompletedEventHandler(object sender, SetTouchPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTouchPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTouchPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void IsExistCompletedEventHandler(object sender, IsExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591