//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ArtFactory.Experimental.OrderProductWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OrderProductWSSoap", Namespace="uStoreWSAPI")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReturnObject))]
    public partial class OrderProductWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOrderProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderProductListByQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderProductHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProofListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDraftOrderProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrderProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecalculatePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuantityPerRecipeintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositeSubOrderProductsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSubmissionDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveToQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOrderProductJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderProductToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptOrderProductIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OrderProductWS() {
            this.Url = global::ArtFactory.Experimental.Properties.Settings.Default.artifact_OrderProductWS_OrderProductWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrderProductListCompletedEventHandler GetOrderProductListCompleted;
        
        /// <remarks/>
        public event GetOrderProductListByQueueCompletedEventHandler GetOrderProductListByQueueCompleted;
        
        /// <remarks/>
        public event GetOrderProductHistoryCompletedEventHandler GetOrderProductHistoryCompleted;
        
        /// <remarks/>
        public event GetOrderProductCompletedEventHandler GetOrderProductCompleted;
        
        /// <remarks/>
        public event GetProofListCompletedEventHandler GetProofListCompleted;
        
        /// <remarks/>
        public event GetDraftOrderProductListCompletedEventHandler GetDraftOrderProductListCompleted;
        
        /// <remarks/>
        public event DeleteOrderProductCompletedEventHandler DeleteOrderProductCompleted;
        
        /// <remarks/>
        public event RecalculatePriceCompletedEventHandler RecalculatePriceCompleted;
        
        /// <remarks/>
        public event UpdateQuantityPerRecipeintCompletedEventHandler UpdateQuantityPerRecipeintCompleted;
        
        /// <remarks/>
        public event GetCompositeSubOrderProductsListCompletedEventHandler GetCompositeSubOrderProductsListCompleted;
        
        /// <remarks/>
        public event GetFileSubmissionDocumentCompletedEventHandler GetFileSubmissionDocumentCompleted;
        
        /// <remarks/>
        public event ReorderCompletedEventHandler ReorderCompleted;
        
        /// <remarks/>
        public event MoveToQueueCompletedEventHandler MoveToQueueCompleted;
        
        /// <remarks/>
        public event ListOrderProductJobStatusCompletedEventHandler ListOrderProductJobStatusCompleted;
        
        /// <remarks/>
        public event CreateOrderProductCompletedEventHandler CreateOrderProductCompleted;
        
        /// <remarks/>
        public event AddOrderProductToCartCompletedEventHandler AddOrderProductToCartCompleted;
        
        /// <remarks/>
        public event DecryptOrderProductIdCompletedEventHandler DecryptOrderProductIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetOrderProductList", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct[] GetOrderProductList(string username, string password, int orderId, bool isReturnDrafts) {
            object[] results = this.Invoke("GetOrderProductList", new object[] {
                        username,
                        password,
                        orderId,
                        isReturnDrafts});
            return ((OrderProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderProductListAsync(string username, string password, int orderId, bool isReturnDrafts) {
            this.GetOrderProductListAsync(username, password, orderId, isReturnDrafts, null);
        }
        
        /// <remarks/>
        public void GetOrderProductListAsync(string username, string password, int orderId, bool isReturnDrafts, object userState) {
            if ((this.GetOrderProductListOperationCompleted == null)) {
                this.GetOrderProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderProductListOperationCompleted);
            }
            this.InvokeAsync("GetOrderProductList", new object[] {
                        username,
                        password,
                        orderId,
                        isReturnDrafts}, this.GetOrderProductListOperationCompleted, userState);
        }
        
        private void OnGetOrderProductListOperationCompleted(object arg) {
            if ((this.GetOrderProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderProductListCompleted(this, new GetOrderProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetOrderProductListByQueue", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct[] GetOrderProductListByQueue(string username, string password, int queueId) {
            object[] results = this.Invoke("GetOrderProductListByQueue", new object[] {
                        username,
                        password,
                        queueId});
            return ((OrderProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderProductListByQueueAsync(string username, string password, int queueId) {
            this.GetOrderProductListByQueueAsync(username, password, queueId, null);
        }
        
        /// <remarks/>
        public void GetOrderProductListByQueueAsync(string username, string password, int queueId, object userState) {
            if ((this.GetOrderProductListByQueueOperationCompleted == null)) {
                this.GetOrderProductListByQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderProductListByQueueOperationCompleted);
            }
            this.InvokeAsync("GetOrderProductListByQueue", new object[] {
                        username,
                        password,
                        queueId}, this.GetOrderProductListByQueueOperationCompleted, userState);
        }
        
        private void OnGetOrderProductListByQueueOperationCompleted(object arg) {
            if ((this.GetOrderProductListByQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderProductListByQueueCompleted(this, new GetOrderProductListByQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetOrderProductHistory", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct[] GetOrderProductHistory(string username, string password, int storeId, int userId) {
            object[] results = this.Invoke("GetOrderProductHistory", new object[] {
                        username,
                        password,
                        storeId,
                        userId});
            return ((OrderProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderProductHistoryAsync(string username, string password, int storeId, int userId) {
            this.GetOrderProductHistoryAsync(username, password, storeId, userId, null);
        }
        
        /// <remarks/>
        public void GetOrderProductHistoryAsync(string username, string password, int storeId, int userId, object userState) {
            if ((this.GetOrderProductHistoryOperationCompleted == null)) {
                this.GetOrderProductHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderProductHistoryOperationCompleted);
            }
            this.InvokeAsync("GetOrderProductHistory", new object[] {
                        username,
                        password,
                        storeId,
                        userId}, this.GetOrderProductHistoryOperationCompleted, userState);
        }
        
        private void OnGetOrderProductHistoryOperationCompleted(object arg) {
            if ((this.GetOrderProductHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderProductHistoryCompleted(this, new GetOrderProductHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetOrderProduct", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct GetOrderProduct(string username, string password, int orderProductId) {
            object[] results = this.Invoke("GetOrderProduct", new object[] {
                        username,
                        password,
                        orderProductId});
            return ((OrderProduct)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderProductAsync(string username, string password, int orderProductId) {
            this.GetOrderProductAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void GetOrderProductAsync(string username, string password, int orderProductId, object userState) {
            if ((this.GetOrderProductOperationCompleted == null)) {
                this.GetOrderProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderProductOperationCompleted);
            }
            this.InvokeAsync("GetOrderProduct", new object[] {
                        username,
                        password,
                        orderProductId}, this.GetOrderProductOperationCompleted, userState);
        }
        
        private void OnGetOrderProductOperationCompleted(object arg) {
            if ((this.GetOrderProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderProductCompleted(this, new GetOrderProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetProofList", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proof[] GetProofList(string username, string password, int orderProductId) {
            object[] results = this.Invoke("GetProofList", new object[] {
                        username,
                        password,
                        orderProductId});
            return ((Proof[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProofListAsync(string username, string password, int orderProductId) {
            this.GetProofListAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void GetProofListAsync(string username, string password, int orderProductId, object userState) {
            if ((this.GetProofListOperationCompleted == null)) {
                this.GetProofListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProofListOperationCompleted);
            }
            this.InvokeAsync("GetProofList", new object[] {
                        username,
                        password,
                        orderProductId}, this.GetProofListOperationCompleted, userState);
        }
        
        private void OnGetProofListOperationCompleted(object arg) {
            if ((this.GetProofListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProofListCompleted(this, new GetProofListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetDraftOrderProductList", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct[] GetDraftOrderProductList(string username, string password, int storeId, int userId, int count) {
            object[] results = this.Invoke("GetDraftOrderProductList", new object[] {
                        username,
                        password,
                        storeId,
                        userId,
                        count});
            return ((OrderProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDraftOrderProductListAsync(string username, string password, int storeId, int userId, int count) {
            this.GetDraftOrderProductListAsync(username, password, storeId, userId, count, null);
        }
        
        /// <remarks/>
        public void GetDraftOrderProductListAsync(string username, string password, int storeId, int userId, int count, object userState) {
            if ((this.GetDraftOrderProductListOperationCompleted == null)) {
                this.GetDraftOrderProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDraftOrderProductListOperationCompleted);
            }
            this.InvokeAsync("GetDraftOrderProductList", new object[] {
                        username,
                        password,
                        storeId,
                        userId,
                        count}, this.GetDraftOrderProductListOperationCompleted, userState);
        }
        
        private void OnGetDraftOrderProductListOperationCompleted(object arg) {
            if ((this.GetDraftOrderProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDraftOrderProductListCompleted(this, new GetDraftOrderProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/DeleteOrderProduct", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrderProduct(string username, string password, int orderProductId) {
            this.Invoke("DeleteOrderProduct", new object[] {
                        username,
                        password,
                        orderProductId});
        }
        
        /// <remarks/>
        public void DeleteOrderProductAsync(string username, string password, int orderProductId) {
            this.DeleteOrderProductAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void DeleteOrderProductAsync(string username, string password, int orderProductId, object userState) {
            if ((this.DeleteOrderProductOperationCompleted == null)) {
                this.DeleteOrderProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrderProductOperationCompleted);
            }
            this.InvokeAsync("DeleteOrderProduct", new object[] {
                        username,
                        password,
                        orderProductId}, this.DeleteOrderProductOperationCompleted, userState);
        }
        
        private void OnDeleteOrderProductOperationCompleted(object arg) {
            if ((this.DeleteOrderProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrderProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/RecalculatePrice", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct RecalculatePrice(string username, string password, int orderProductId) {
            object[] results = this.Invoke("RecalculatePrice", new object[] {
                        username,
                        password,
                        orderProductId});
            return ((OrderProduct)(results[0]));
        }
        
        /// <remarks/>
        public void RecalculatePriceAsync(string username, string password, int orderProductId) {
            this.RecalculatePriceAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void RecalculatePriceAsync(string username, string password, int orderProductId, object userState) {
            if ((this.RecalculatePriceOperationCompleted == null)) {
                this.RecalculatePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecalculatePriceOperationCompleted);
            }
            this.InvokeAsync("RecalculatePrice", new object[] {
                        username,
                        password,
                        orderProductId}, this.RecalculatePriceOperationCompleted, userState);
        }
        
        private void OnRecalculatePriceOperationCompleted(object arg) {
            if ((this.RecalculatePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecalculatePriceCompleted(this, new RecalculatePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/UpdateQuantityPerRecipeint", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct UpdateQuantityPerRecipeint(string username, string password, int orderProductId, int quantityPerRecipient) {
            object[] results = this.Invoke("UpdateQuantityPerRecipeint", new object[] {
                        username,
                        password,
                        orderProductId,
                        quantityPerRecipient});
            return ((OrderProduct)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuantityPerRecipeintAsync(string username, string password, int orderProductId, int quantityPerRecipient) {
            this.UpdateQuantityPerRecipeintAsync(username, password, orderProductId, quantityPerRecipient, null);
        }
        
        /// <remarks/>
        public void UpdateQuantityPerRecipeintAsync(string username, string password, int orderProductId, int quantityPerRecipient, object userState) {
            if ((this.UpdateQuantityPerRecipeintOperationCompleted == null)) {
                this.UpdateQuantityPerRecipeintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuantityPerRecipeintOperationCompleted);
            }
            this.InvokeAsync("UpdateQuantityPerRecipeint", new object[] {
                        username,
                        password,
                        orderProductId,
                        quantityPerRecipient}, this.UpdateQuantityPerRecipeintOperationCompleted, userState);
        }
        
        private void OnUpdateQuantityPerRecipeintOperationCompleted(object arg) {
            if ((this.UpdateQuantityPerRecipeintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuantityPerRecipeintCompleted(this, new UpdateQuantityPerRecipeintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetCompositeSubOrderProductsList", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderProduct[] GetCompositeSubOrderProductsList(string username, string password, int orderProductId) {
            object[] results = this.Invoke("GetCompositeSubOrderProductsList", new object[] {
                        username,
                        password,
                        orderProductId});
            return ((OrderProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositeSubOrderProductsListAsync(string username, string password, int orderProductId) {
            this.GetCompositeSubOrderProductsListAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void GetCompositeSubOrderProductsListAsync(string username, string password, int orderProductId, object userState) {
            if ((this.GetCompositeSubOrderProductsListOperationCompleted == null)) {
                this.GetCompositeSubOrderProductsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositeSubOrderProductsListOperationCompleted);
            }
            this.InvokeAsync("GetCompositeSubOrderProductsList", new object[] {
                        username,
                        password,
                        orderProductId}, this.GetCompositeSubOrderProductsListOperationCompleted, userState);
        }
        
        private void OnGetCompositeSubOrderProductsListOperationCompleted(object arg) {
            if ((this.GetCompositeSubOrderProductsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositeSubOrderProductsListCompleted(this, new GetCompositeSubOrderProductsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/GetFileSubmissionDocument", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileSubmissionDocument GetFileSubmissionDocument(string username, string password, int subOrderProductId) {
            object[] results = this.Invoke("GetFileSubmissionDocument", new object[] {
                        username,
                        password,
                        subOrderProductId});
            return ((FileSubmissionDocument)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSubmissionDocumentAsync(string username, string password, int subOrderProductId) {
            this.GetFileSubmissionDocumentAsync(username, password, subOrderProductId, null);
        }
        
        /// <remarks/>
        public void GetFileSubmissionDocumentAsync(string username, string password, int subOrderProductId, object userState) {
            if ((this.GetFileSubmissionDocumentOperationCompleted == null)) {
                this.GetFileSubmissionDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSubmissionDocumentOperationCompleted);
            }
            this.InvokeAsync("GetFileSubmissionDocument", new object[] {
                        username,
                        password,
                        subOrderProductId}, this.GetFileSubmissionDocumentOperationCompleted, userState);
        }
        
        private void OnGetFileSubmissionDocumentOperationCompleted(object arg) {
            if ((this.GetFileSubmissionDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSubmissionDocumentCompleted(this, new GetFileSubmissionDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/Reorder", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Reorder(string username, string password, int orderProductId, out bool isSuccessful) {
            object[] results = this.Invoke("Reorder", new object[] {
                        username,
                        password,
                        orderProductId});
            isSuccessful = ((bool)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReorderAsync(string username, string password, int orderProductId) {
            this.ReorderAsync(username, password, orderProductId, null);
        }
        
        /// <remarks/>
        public void ReorderAsync(string username, string password, int orderProductId, object userState) {
            if ((this.ReorderOperationCompleted == null)) {
                this.ReorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReorderOperationCompleted);
            }
            this.InvokeAsync("Reorder", new object[] {
                        username,
                        password,
                        orderProductId}, this.ReorderOperationCompleted, userState);
        }
        
        private void OnReorderOperationCompleted(object arg) {
            if ((this.ReorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReorderCompleted(this, new ReorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/MoveToQueue", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveToQueue(string username, string password, int orderProductId, int queueId) {
            this.Invoke("MoveToQueue", new object[] {
                        username,
                        password,
                        orderProductId,
                        queueId});
        }
        
        /// <remarks/>
        public void MoveToQueueAsync(string username, string password, int orderProductId, int queueId) {
            this.MoveToQueueAsync(username, password, orderProductId, queueId, null);
        }
        
        /// <remarks/>
        public void MoveToQueueAsync(string username, string password, int orderProductId, int queueId, object userState) {
            if ((this.MoveToQueueOperationCompleted == null)) {
                this.MoveToQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveToQueueOperationCompleted);
            }
            this.InvokeAsync("MoveToQueue", new object[] {
                        username,
                        password,
                        orderProductId,
                        queueId}, this.MoveToQueueOperationCompleted, userState);
        }
        
        private void OnMoveToQueueOperationCompleted(object arg) {
            if ((this.MoveToQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveToQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/ListOrderProductJobStatus", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] ListOrderProductJobStatus(string username, string password, int[] orderProductIds) {
            object[] results = this.Invoke("ListOrderProductJobStatus", new object[] {
                        username,
                        password,
                        orderProductIds});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOrderProductJobStatusAsync(string username, string password, int[] orderProductIds) {
            this.ListOrderProductJobStatusAsync(username, password, orderProductIds, null);
        }
        
        /// <remarks/>
        public void ListOrderProductJobStatusAsync(string username, string password, int[] orderProductIds, object userState) {
            if ((this.ListOrderProductJobStatusOperationCompleted == null)) {
                this.ListOrderProductJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOrderProductJobStatusOperationCompleted);
            }
            this.InvokeAsync("ListOrderProductJobStatus", new object[] {
                        username,
                        password,
                        orderProductIds}, this.ListOrderProductJobStatusOperationCompleted, userState);
        }
        
        private void OnListOrderProductJobStatusOperationCompleted(object arg) {
            if ((this.ListOrderProductJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOrderProductJobStatusCompleted(this, new ListOrderProductJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/CreateOrderProduct", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrderProduct(string username, string password, int productId, int orderId) {
            object[] results = this.Invoke("CreateOrderProduct", new object[] {
                        username,
                        password,
                        productId,
                        orderId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderProductAsync(string username, string password, int productId, int orderId) {
            this.CreateOrderProductAsync(username, password, productId, orderId, null);
        }
        
        /// <remarks/>
        public void CreateOrderProductAsync(string username, string password, int productId, int orderId, object userState) {
            if ((this.CreateOrderProductOperationCompleted == null)) {
                this.CreateOrderProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderProductOperationCompleted);
            }
            this.InvokeAsync("CreateOrderProduct", new object[] {
                        username,
                        password,
                        productId,
                        orderId}, this.CreateOrderProductOperationCompleted, userState);
        }
        
        private void OnCreateOrderProductOperationCompleted(object arg) {
            if ((this.CreateOrderProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderProductCompleted(this, new CreateOrderProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/AddOrderProductToCart", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderProductToCart(string username, string password, int orderProductId, int orderId) {
            this.Invoke("AddOrderProductToCart", new object[] {
                        username,
                        password,
                        orderProductId,
                        orderId});
        }
        
        /// <remarks/>
        public void AddOrderProductToCartAsync(string username, string password, int orderProductId, int orderId) {
            this.AddOrderProductToCartAsync(username, password, orderProductId, orderId, null);
        }
        
        /// <remarks/>
        public void AddOrderProductToCartAsync(string username, string password, int orderProductId, int orderId, object userState) {
            if ((this.AddOrderProductToCartOperationCompleted == null)) {
                this.AddOrderProductToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderProductToCartOperationCompleted);
            }
            this.InvokeAsync("AddOrderProductToCart", new object[] {
                        username,
                        password,
                        orderProductId,
                        orderId}, this.AddOrderProductToCartOperationCompleted, userState);
        }
        
        private void OnAddOrderProductToCartOperationCompleted(object arg) {
            if ((this.AddOrderProductToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderProductToCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("uStoreWSAPI/DecryptOrderProductId", RequestNamespace="uStoreWSAPI", ResponseNamespace="uStoreWSAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DecryptOrderProductId(string username, string password, string encryptedOrderProductId) {
            object[] results = this.Invoke("DecryptOrderProductId", new object[] {
                        username,
                        password,
                        encryptedOrderProductId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptOrderProductIdAsync(string username, string password, string encryptedOrderProductId) {
            this.DecryptOrderProductIdAsync(username, password, encryptedOrderProductId, null);
        }
        
        /// <remarks/>
        public void DecryptOrderProductIdAsync(string username, string password, string encryptedOrderProductId, object userState) {
            if ((this.DecryptOrderProductIdOperationCompleted == null)) {
                this.DecryptOrderProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptOrderProductIdOperationCompleted);
            }
            this.InvokeAsync("DecryptOrderProductId", new object[] {
                        username,
                        password,
                        encryptedOrderProductId}, this.DecryptOrderProductIdOperationCompleted, userState);
        }
        
        private void OnDecryptOrderProductIdOperationCompleted(object arg) {
            if ((this.DecryptOrderProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptOrderProductIdCompleted(this, new DecryptOrderProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class OrderProduct : ReturnObject {
        
        private int orderProductIDField;
        
        private int orderIDField;
        
        private int productIDField;
        
        private int quantityPerRecipientField;
        
        private int numRecipientsField;
        
        private int totalQuantityField;
        
        private decimal productUnitPriceField;
        
        private decimal pricePerRecipientField;
        
        private decimal productPriceSubtotalField;
        
        private decimal totalPriceField;
        
        private int recipientListIDField;
        
        private int recipientDataSourceIDField;
        
        private int recipientFilterIDField;
        
        private int recipientDataSourceTableIDField;
        
        private bool isDraftField;
        
        private bool isSavedDraftField;
        
        private string extraParamsXmlField;
        
        private System.DateTime dateAddedField;
        
        private int orderQueueIDField;
        
        private int uproduceJobIDField;
        
        private int statusIDField;
        
        private int recipientListModelIDField;
        
        private string documentXmlField;
        
        private string aggregationCriteriaField;
        
        private int jobGroupIDField;
        
        private string docAggregationCriteriaField;
        
        private string flatCsvxFilePathField;
        
        private int uproduceHandlingFlatJobIDField;
        
        private int deliveryMethodField;
        
        private int deliveryServiceIDField;
        
        private decimal deliveryPriceField;
        
        private int parentOrderProductIDField;
        
        private decimal costField;
        
        private CircleProjectOrderProductDetails circleInfoField;
        
        /// <remarks/>
        public int OrderProductID {
            get {
                return this.orderProductIDField;
            }
            set {
                this.orderProductIDField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public int QuantityPerRecipient {
            get {
                return this.quantityPerRecipientField;
            }
            set {
                this.quantityPerRecipientField = value;
            }
        }
        
        /// <remarks/>
        public int NumRecipients {
            get {
                return this.numRecipientsField;
            }
            set {
                this.numRecipientsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalQuantity {
            get {
                return this.totalQuantityField;
            }
            set {
                this.totalQuantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal ProductUnitPrice {
            get {
                return this.productUnitPriceField;
            }
            set {
                this.productUnitPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal PricePerRecipient {
            get {
                return this.pricePerRecipientField;
            }
            set {
                this.pricePerRecipientField = value;
            }
        }
        
        /// <remarks/>
        public decimal ProductPriceSubtotal {
            get {
                return this.productPriceSubtotalField;
            }
            set {
                this.productPriceSubtotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalPrice {
            get {
                return this.totalPriceField;
            }
            set {
                this.totalPriceField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientListID {
            get {
                return this.recipientListIDField;
            }
            set {
                this.recipientListIDField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientDataSourceID {
            get {
                return this.recipientDataSourceIDField;
            }
            set {
                this.recipientDataSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientFilterID {
            get {
                return this.recipientFilterIDField;
            }
            set {
                this.recipientFilterIDField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientDataSourceTableID {
            get {
                return this.recipientDataSourceTableIDField;
            }
            set {
                this.recipientDataSourceTableIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDraft {
            get {
                return this.isDraftField;
            }
            set {
                this.isDraftField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSavedDraft {
            get {
                return this.isSavedDraftField;
            }
            set {
                this.isSavedDraftField = value;
            }
        }
        
        /// <remarks/>
        public string ExtraParamsXml {
            get {
                return this.extraParamsXmlField;
            }
            set {
                this.extraParamsXmlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        public int OrderQueueID {
            get {
                return this.orderQueueIDField;
            }
            set {
                this.orderQueueIDField = value;
            }
        }
        
        /// <remarks/>
        public int UproduceJobID {
            get {
                return this.uproduceJobIDField;
            }
            set {
                this.uproduceJobIDField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientListModelID {
            get {
                return this.recipientListModelIDField;
            }
            set {
                this.recipientListModelIDField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentXml {
            get {
                return this.documentXmlField;
            }
            set {
                this.documentXmlField = value;
            }
        }
        
        /// <remarks/>
        public string AggregationCriteria {
            get {
                return this.aggregationCriteriaField;
            }
            set {
                this.aggregationCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public int JobGroupID {
            get {
                return this.jobGroupIDField;
            }
            set {
                this.jobGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public string DocAggregationCriteria {
            get {
                return this.docAggregationCriteriaField;
            }
            set {
                this.docAggregationCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public string FlatCsvxFilePath {
            get {
                return this.flatCsvxFilePathField;
            }
            set {
                this.flatCsvxFilePathField = value;
            }
        }
        
        /// <remarks/>
        public int UproduceHandlingFlatJobID {
            get {
                return this.uproduceHandlingFlatJobIDField;
            }
            set {
                this.uproduceHandlingFlatJobIDField = value;
            }
        }
        
        /// <remarks/>
        public int DeliveryMethod {
            get {
                return this.deliveryMethodField;
            }
            set {
                this.deliveryMethodField = value;
            }
        }
        
        /// <remarks/>
        public int DeliveryServiceID {
            get {
                return this.deliveryServiceIDField;
            }
            set {
                this.deliveryServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliveryPrice {
            get {
                return this.deliveryPriceField;
            }
            set {
                this.deliveryPriceField = value;
            }
        }
        
        /// <remarks/>
        public int ParentOrderProductID {
            get {
                return this.parentOrderProductIDField;
            }
            set {
                this.parentOrderProductIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public CircleProjectOrderProductDetails CircleInfo {
            get {
                return this.circleInfoField;
            }
            set {
                this.circleInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class CircleProjectOrderProductDetails {
        
        private System.Guid circleProjectIDField;
        
        private System.Guid circleFamilyIDField;
        
        private System.Guid circleTouchPointIDField;
        
        /// <remarks/>
        public System.Guid CircleProjectID {
            get {
                return this.circleProjectIDField;
            }
            set {
                this.circleProjectIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CircleFamilyID {
            get {
                return this.circleFamilyIDField;
            }
            set {
                this.circleFamilyIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CircleTouchPointID {
            get {
                return this.circleTouchPointIDField;
            }
            set {
                this.circleTouchPointIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class DocumentPage {
        
        private int pageNumberField;
        
        private double heightField;
        
        private double widthField;
        
        private int colorTypeIDField;
        
        private bool isRotatedField;
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public int ColorTypeID {
            get {
                return this.colorTypeIDField;
            }
            set {
                this.colorTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRotated {
            get {
                return this.isRotatedField;
            }
            set {
                this.isRotatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class FileSubmissionDocument {
        
        private int subOrderProductIDField;
        
        private string titleField;
        
        private string filePathField;
        
        private DocumentPage[] documentPagesField;
        
        /// <remarks/>
        public int SubOrderProductID {
            get {
                return this.subOrderProductIDField;
            }
            set {
                this.subOrderProductIDField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        public DocumentPage[] DocumentPages {
            get {
                return this.documentPagesField;
            }
            set {
                this.documentPagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Proof))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderProduct))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public abstract partial class ReturnObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class Proof : ReturnObject {
        
        private int proofIDField;
        
        private int orderProductIDField;
        
        private System.DateTime proofDateField;
        
        private int uProduceProofJobIDField;
        
        private bool isProofSuccessfulField;
        
        private int recipientCountField;
        
        private bool isProofSeenField;
        
        private string fileExtensionField;
        
        /// <remarks/>
        public int ProofID {
            get {
                return this.proofIDField;
            }
            set {
                this.proofIDField = value;
            }
        }
        
        /// <remarks/>
        public int OrderProductID {
            get {
                return this.orderProductIDField;
            }
            set {
                this.orderProductIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProofDate {
            get {
                return this.proofDateField;
            }
            set {
                this.proofDateField = value;
            }
        }
        
        /// <remarks/>
        public int UProduceProofJobID {
            get {
                return this.uProduceProofJobIDField;
            }
            set {
                this.uProduceProofJobIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProofSuccessful {
            get {
                return this.isProofSuccessfulField;
            }
            set {
                this.isProofSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientCount {
            get {
                return this.recipientCountField;
            }
            set {
                this.recipientCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProofSeen {
            get {
                return this.isProofSeenField;
            }
            set {
                this.isProofSeenField = value;
            }
        }
        
        /// <remarks/>
        public string FileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderProductListCompletedEventHandler(object sender, GetOrderProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderProductListByQueueCompletedEventHandler(object sender, GetOrderProductListByQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderProductListByQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderProductListByQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderProductHistoryCompletedEventHandler(object sender, GetOrderProductHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderProductHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderProductHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderProductCompletedEventHandler(object sender, GetOrderProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProofListCompletedEventHandler(object sender, GetProofListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProofListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProofListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Proof[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Proof[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDraftOrderProductListCompletedEventHandler(object sender, GetDraftOrderProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDraftOrderProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDraftOrderProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteOrderProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RecalculatePriceCompletedEventHandler(object sender, RecalculatePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecalculatePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecalculatePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateQuantityPerRecipeintCompletedEventHandler(object sender, UpdateQuantityPerRecipeintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuantityPerRecipeintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuantityPerRecipeintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCompositeSubOrderProductsListCompletedEventHandler(object sender, GetCompositeSubOrderProductsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositeSubOrderProductsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositeSubOrderProductsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderProduct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetFileSubmissionDocumentCompletedEventHandler(object sender, GetFileSubmissionDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSubmissionDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSubmissionDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileSubmissionDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileSubmissionDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReorderCompletedEventHandler(object sender, ReorderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReorderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReorderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isSuccessful {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void MoveToQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListOrderProductJobStatusCompletedEventHandler(object sender, ListOrderProductJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOrderProductJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOrderProductJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateOrderProductCompletedEventHandler(object sender, CreateOrderProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddOrderProductToCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DecryptOrderProductIdCompletedEventHandler(object sender, DecryptOrderProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptOrderProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptOrderProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591