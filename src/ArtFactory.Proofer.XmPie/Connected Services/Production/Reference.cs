//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtFactory.Proofer.XmPie.Production {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="XMPieWSAPI", ConfigurationName="Production.ProductionSoap")]
    public interface ProductionSoap {
        
        // CODEGEN: Generating message contract since message SubmitJobsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse SubmitJobs(ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse> SubmitJobsAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest request);
        
        // CODEGEN: Generating message contract since message SubmitJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobResponse SubmitJob(ArtFactory.Proofer.XmPie.Production.SubmitJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobResponse> SubmitJobAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobRequest request);
        
        // CODEGEN: Generating message contract since message SubmitSplittedJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitSplittedJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse SubmitSplittedJob(ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitSplittedJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse> SubmitSplittedJobAsync(ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest request);
        
        // CODEGEN: Generating message contract since message SubmitJobWithParallelProcessingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJobWithParallelProcessing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse SubmitJobWithParallelProcessing(ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SubmitJobWithParallelProcessing", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse> SubmitJobWithParallelProcessingAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest request);
        
        // CODEGEN: Generating message contract since message DeployHTMLDocumentJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeployHTMLDocumentJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse DeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeployHTMLDocumentJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse> DeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest request);
        
        // CODEGEN: Generating message contract since message UnDeployHTMLDocumentJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/UnDeployHTMLDocumentJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse UnDeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/UnDeployHTMLDocumentJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse> UnDeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest request);
        
        // CODEGEN: Generating message contract since message MergeCSVXFilesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/MergeCSVXFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse MergeCSVXFiles(ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/MergeCSVXFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse> MergeCSVXFilesAsync(ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest request);
        
        // CODEGEN: Generating message contract since message AppendCSVXFileRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AppendCSVXFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse AppendCSVXFile(ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AppendCSVXFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse> AppendCSVXFileAsync(ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest request);
        
        // CODEGEN: Generating message contract since message DeployOnDemandJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeployOnDemandJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse DeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeployOnDemandJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse> DeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest request);
        
        // CODEGEN: Generating message contract since message UndeployOnDemandJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/UndeployOnDemandJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse UndeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/UndeployOnDemandJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse> UndeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest request);
        
        // CODEGEN: Generating message contract since message SuspendOnDemandJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SuspendOnDemandJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse SuspendOnDemandJob(ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SuspendOnDemandJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse> SuspendOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest request);
        
        // CODEGEN: Generating message contract since message ResumeOnDemandJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/ResumeOnDemandJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse ResumeOnDemandJob(ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/ResumeOnDemandJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse> ResumeOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest request);
        
        // CODEGEN: Generating message contract since message RedeployOnDemandJobRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/RedeployOnDemandJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse RedeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/RedeployOnDemandJob", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse> RedeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest request);
        
        // CODEGEN: Generating message contract since message CreateOnDemandOutputRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/CreateOnDemandOutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse CreateOnDemandOutput(ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/CreateOnDemandOutput", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse> CreateOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest request);
        
        // CODEGEN: Generating message contract since message GetOnDemandOutputRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOnDemandOutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse GetOnDemandOutput(ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOnDemandOutput", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse> GetOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest request);
        
        // CODEGEN: Generating message contract since message DeleteOnDemandOutputRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteOnDemandOutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse DeleteOnDemandOutput(ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteOnDemandOutput", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse> DeleteOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private string callerIDField;
        
        private string dateFormatStringField;
        
        private bool forceUTCDateField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CallerID {
            get {
                return this.callerIDField;
            }
            set {
                this.callerIDField = value;
                this.RaisePropertyChanged("CallerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DateFormatString {
            get {
                return this.dateFormatStringField;
            }
            set {
                this.dateFormatStringField = value;
                this.RaisePropertyChanged("DateFormatString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool ForceUTCDate {
            get {
                return this.forceUTCDateField;
            }
            set {
                this.forceUTCDateField = value;
                this.RaisePropertyChanged("ForceUTCDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class OnDemandOutputResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int m_StatusField;
        
        private string m_MessageField;
        
        private string m_FileNameField;
        
        private long m_FileSizeField;
        
        private string m_FileTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int m_Status {
            get {
                return this.m_StatusField;
            }
            set {
                this.m_StatusField = value;
                this.RaisePropertyChanged("m_Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                this.m_MessageField = value;
                this.RaisePropertyChanged("m_Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string m_FileName {
            get {
                return this.m_FileNameField;
            }
            set {
                this.m_FileNameField = value;
                this.RaisePropertyChanged("m_FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long m_FileSize {
            get {
                return this.m_FileSizeField;
            }
            set {
                this.m_FileSizeField = value;
                this.RaisePropertyChanged("m_FileSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string m_FileToken {
            get {
                return this.m_FileTokenField;
            }
            set {
                this.m_FileTokenField = value;
                this.RaisePropertyChanged("m_FileToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class Property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_NameField;
        
        private string m_ValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_Name {
            get {
                return this.m_NameField;
            }
            set {
                this.m_NameField = value;
                this.RaisePropertyChanged("m_Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_Value {
            get {
                return this.m_ValueField;
            }
            set {
                this.m_ValueField = value;
                this.RaisePropertyChanged("m_Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJobs", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public SubmitJobsRequest() {
        }
        
        public SubmitJobsRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJobsResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string[] SubmitJobsResult;
        
        public SubmitJobsResponse() {
        }
        
        public SubmitJobsResponse(string[] SubmitJobsResult) {
            this.SubmitJobsResult = SubmitJobsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPriority;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inTouchPointID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public SubmitJobRequest() {
        }
        
        public SubmitJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inPriority = inPriority;
            this.inTouchPointID = inTouchPointID;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string SubmitJobResult;
        
        public SubmitJobResponse() {
        }
        
        public SubmitJobResponse(string SubmitJobResult) {
            this.SubmitJobResult = SubmitJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSplittedJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitSplittedJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inSplittingType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inSplittingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string inPriority;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        public string inTouchPointID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public SubmitSplittedJobRequest() {
        }
        
        public SubmitSplittedJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inSplittingType = inSplittingType;
            this.inSplittingInfo = inSplittingInfo;
            this.inPriority = inPriority;
            this.inTouchPointID = inTouchPointID;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSplittedJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitSplittedJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string[] SubmitSplittedJobResult;
        
        public SubmitSplittedJobResponse() {
        }
        
        public SubmitSplittedJobResponse(string[] SubmitSplittedJobResult) {
            this.SubmitSplittedJobResult = SubmitSplittedJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJobWithParallelProcessing", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobWithParallelProcessingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inSplittingType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inSplittingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string inPriority;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        public string inTouchPointID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public SubmitJobWithParallelProcessingRequest() {
        }
        
        public SubmitJobWithParallelProcessingRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inSplittingType = inSplittingType;
            this.inSplittingInfo = inSplittingInfo;
            this.inPriority = inPriority;
            this.inTouchPointID = inTouchPointID;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitJobWithParallelProcessingResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SubmitJobWithParallelProcessingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string SubmitJobWithParallelProcessingResult;
        
        public SubmitJobWithParallelProcessingResponse() {
        }
        
        public SubmitJobWithParallelProcessingResponse(string SubmitJobWithParallelProcessingResult) {
            this.SubmitJobWithParallelProcessingResult = SubmitJobWithParallelProcessingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeployHTMLDocumentJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeployHTMLDocumentJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inTouchPointID;
        
        public DeployHTMLDocumentJobRequest() {
        }
        
        public DeployHTMLDocumentJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inTouchPointID) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inTouchPointID = inTouchPointID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeployHTMLDocumentJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeployHTMLDocumentJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string DeployHTMLDocumentJobResult;
        
        public DeployHTMLDocumentJobResponse() {
        }
        
        public DeployHTMLDocumentJobResponse(string DeployHTMLDocumentJobResult) {
            this.DeployHTMLDocumentJobResult = DeployHTMLDocumentJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnDeployHTMLDocumentJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class UnDeployHTMLDocumentJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobID;
        
        public UnDeployHTMLDocumentJobRequest() {
        }
        
        public UnDeployHTMLDocumentJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            this.XMPUser = XMPUser;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnDeployHTMLDocumentJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class UnDeployHTMLDocumentJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool UnDeployHTMLDocumentJobResult;
        
        public UnDeployHTMLDocumentJobResponse() {
        }
        
        public UnDeployHTMLDocumentJobResponse(bool UnDeployHTMLDocumentJobResult) {
            this.UnDeployHTMLDocumentJobResult = UnDeployHTMLDocumentJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MergeCSVXFiles", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class MergeCSVXFilesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string[] inCSVXFilePaths;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inOutputCSVXPath;
        
        public MergeCSVXFilesRequest() {
        }
        
        public MergeCSVXFilesRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string[] inCSVXFilePaths, string inOutputCSVXPath) {
            this.XMPUser = XMPUser;
            this.inCSVXFilePaths = inCSVXFilePaths;
            this.inOutputCSVXPath = inOutputCSVXPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MergeCSVXFilesResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class MergeCSVXFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool MergeCSVXFilesResult;
        
        public MergeCSVXFilesResponse() {
        }
        
        public MergeCSVXFilesResponse(bool MergeCSVXFilesResult) {
            this.MergeCSVXFilesResult = MergeCSVXFilesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppendCSVXFile", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AppendCSVXFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inMainCSVXFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inSecondaryCSVXFilePath;
        
        public AppendCSVXFileRequest() {
        }
        
        public AppendCSVXFileRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inMainCSVXFilePath, string inSecondaryCSVXFilePath) {
            this.XMPUser = XMPUser;
            this.inMainCSVXFilePath = inMainCSVXFilePath;
            this.inSecondaryCSVXFilePath = inSecondaryCSVXFilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppendCSVXFileResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AppendCSVXFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool AppendCSVXFileResult;
        
        public AppendCSVXFileResponse() {
        }
        
        public AppendCSVXFileResponse(bool AppendCSVXFileResult) {
            this.AppendCSVXFileResult = AppendCSVXFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeployOnDemandJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeployOnDemandJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobTicket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public DeployOnDemandJobRequest() {
        }
        
        public DeployOnDemandJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inJobTicket = inJobTicket;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeployOnDemandJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeployOnDemandJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string DeployOnDemandJobResult;
        
        public DeployOnDemandJobResponse() {
        }
        
        public DeployOnDemandJobResponse(string DeployOnDemandJobResult) {
            this.DeployOnDemandJobResult = DeployOnDemandJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UndeployOnDemandJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class UndeployOnDemandJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobID;
        
        public UndeployOnDemandJobRequest() {
        }
        
        public UndeployOnDemandJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            this.XMPUser = XMPUser;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UndeployOnDemandJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class UndeployOnDemandJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool UndeployOnDemandJobResult;
        
        public UndeployOnDemandJobResponse() {
        }
        
        public UndeployOnDemandJobResponse(bool UndeployOnDemandJobResult) {
            this.UndeployOnDemandJobResult = UndeployOnDemandJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SuspendOnDemandJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SuspendOnDemandJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobID;
        
        public SuspendOnDemandJobRequest() {
        }
        
        public SuspendOnDemandJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            this.XMPUser = XMPUser;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SuspendOnDemandJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SuspendOnDemandJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool SuspendOnDemandJobResult;
        
        public SuspendOnDemandJobResponse() {
        }
        
        public SuspendOnDemandJobResponse(bool SuspendOnDemandJobResult) {
            this.SuspendOnDemandJobResult = SuspendOnDemandJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeOnDemandJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class ResumeOnDemandJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobID;
        
        public ResumeOnDemandJobRequest() {
        }
        
        public ResumeOnDemandJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            this.XMPUser = XMPUser;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeOnDemandJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class ResumeOnDemandJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool ResumeOnDemandJobResult;
        
        public ResumeOnDemandJobResponse() {
        }
        
        public ResumeOnDemandJobResponse(bool ResumeOnDemandJobResult) {
            this.ResumeOnDemandJobResult = ResumeOnDemandJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedeployOnDemandJob", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class RedeployOnDemandJobRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inJobTicket;
        
        public RedeployOnDemandJobRequest() {
        }
        
        public RedeployOnDemandJobRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID, string inJobTicket) {
            this.XMPUser = XMPUser;
            this.inJobID = inJobID;
            this.inJobTicket = inJobTicket;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedeployOnDemandJobResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class RedeployOnDemandJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool RedeployOnDemandJobResult;
        
        public RedeployOnDemandJobResponse() {
        }
        
        public RedeployOnDemandJobResponse(bool RedeployOnDemandJobResult) {
            this.RedeployOnDemandJobResult = RedeployOnDemandJobResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOnDemandOutput", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class CreateOnDemandOutputRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Production.Property[] inProps;
        
        public CreateOnDemandOutputRequest() {
        }
        
        public CreateOnDemandOutputRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            this.XMPUser = XMPUser;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOnDemandOutputResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class CreateOnDemandOutputResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string CreateOnDemandOutputResult;
        
        public CreateOnDemandOutputResponse() {
        }
        
        public CreateOnDemandOutputResponse(string CreateOnDemandOutputResult) {
            this.CreateOnDemandOutputResult = CreateOnDemandOutputResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOnDemandOutput", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOnDemandOutputRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inRequestID;
        
        public GetOnDemandOutputRequest() {
        }
        
        public GetOnDemandOutputRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            this.XMPUser = XMPUser;
            this.inRequestID = inRequestID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOnDemandOutputResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOnDemandOutputResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public ArtFactory.Proofer.XmPie.Production.OnDemandOutputResult GetOnDemandOutputResult;
        
        public GetOnDemandOutputResponse() {
        }
        
        public GetOnDemandOutputResponse(ArtFactory.Proofer.XmPie.Production.OnDemandOutputResult GetOnDemandOutputResult) {
            this.GetOnDemandOutputResult = GetOnDemandOutputResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteOnDemandOutput", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeleteOnDemandOutputRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="XMPieWSAPI")]
        public ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inRequestID;
        
        public DeleteOnDemandOutputRequest() {
        }
        
        public DeleteOnDemandOutputRequest(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            this.XMPUser = XMPUser;
            this.inRequestID = inRequestID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteOnDemandOutputResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class DeleteOnDemandOutputResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool DeleteOnDemandOutputResult;
        
        public DeleteOnDemandOutputResponse() {
        }
        
        public DeleteOnDemandOutputResponse(bool DeleteOnDemandOutputResult) {
            this.DeleteOnDemandOutputResult = DeleteOnDemandOutputResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProductionSoapChannel : ArtFactory.Proofer.XmPie.Production.ProductionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductionSoapClient : System.ServiceModel.ClientBase<ArtFactory.Proofer.XmPie.Production.ProductionSoap>, ArtFactory.Proofer.XmPie.Production.ProductionSoap {
        
        public ProductionSoapClient() {
        }
        
        public ProductionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJobs(ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest request) {
            return base.Channel.SubmitJobs(request);
        }
        
        public string[] SubmitJobs(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJobs(inValue);
            return retVal.SubmitJobsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJobsAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest request) {
            return base.Channel.SubmitJobsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobsResponse> SubmitJobsAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobsRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJobsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJob(ArtFactory.Proofer.XmPie.Production.SubmitJobRequest request) {
            return base.Channel.SubmitJob(request);
        }
        
        public string SubmitJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.SubmitJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJob(inValue);
            return retVal.SubmitJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJobAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobRequest request) {
            return base.Channel.SubmitJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobResponse> SubmitJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitSplittedJob(ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest request) {
            return base.Channel.SubmitSplittedJob(request);
        }
        
        public string[] SubmitSplittedJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inSplittingType = inSplittingType;
            inValue.inSplittingInfo = inSplittingInfo;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitSplittedJob(inValue);
            return retVal.SubmitSplittedJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitSplittedJobAsync(ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest request) {
            return base.Channel.SubmitSplittedJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobResponse> SubmitSplittedJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitSplittedJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inSplittingType = inSplittingType;
            inValue.inSplittingInfo = inSplittingInfo;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitSplittedJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJobWithParallelProcessing(ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest request) {
            return base.Channel.SubmitJobWithParallelProcessing(request);
        }
        
        public string SubmitJobWithParallelProcessing(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inSplittingType = inSplittingType;
            inValue.inSplittingInfo = inSplittingInfo;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJobWithParallelProcessing(inValue);
            return retVal.SubmitJobWithParallelProcessingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.SubmitJobWithParallelProcessingAsync(ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest request) {
            return base.Channel.SubmitJobWithParallelProcessingAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingResponse> SubmitJobWithParallelProcessingAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inSplittingType, string inSplittingInfo, string inPriority, string inTouchPointID, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest inValue = new ArtFactory.Proofer.XmPie.Production.SubmitJobWithParallelProcessingRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inSplittingType = inSplittingType;
            inValue.inSplittingInfo = inSplittingInfo;
            inValue.inPriority = inPriority;
            inValue.inTouchPointID = inTouchPointID;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SubmitJobWithParallelProcessingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest request) {
            return base.Channel.DeployHTMLDocumentJob(request);
        }
        
        public string DeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inTouchPointID) {
            ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inTouchPointID = inTouchPointID;
            ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeployHTMLDocumentJob(inValue);
            return retVal.DeployHTMLDocumentJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest request) {
            return base.Channel.DeployHTMLDocumentJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobResponse> DeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, string inTouchPointID) {
            ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeployHTMLDocumentJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inTouchPointID = inTouchPointID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeployHTMLDocumentJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.UnDeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest request) {
            return base.Channel.UnDeployHTMLDocumentJob(request);
        }
        
        public bool UnDeployHTMLDocumentJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).UnDeployHTMLDocumentJob(inValue);
            return retVal.UnDeployHTMLDocumentJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.UnDeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest request) {
            return base.Channel.UnDeployHTMLDocumentJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobResponse> UnDeployHTMLDocumentJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.UnDeployHTMLDocumentJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).UnDeployHTMLDocumentJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.MergeCSVXFiles(ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest request) {
            return base.Channel.MergeCSVXFiles(request);
        }
        
        public bool MergeCSVXFiles(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string[] inCSVXFilePaths, string inOutputCSVXPath) {
            ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest inValue = new ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest();
            inValue.XMPUser = XMPUser;
            inValue.inCSVXFilePaths = inCSVXFilePaths;
            inValue.inOutputCSVXPath = inOutputCSVXPath;
            ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).MergeCSVXFiles(inValue);
            return retVal.MergeCSVXFilesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.MergeCSVXFilesAsync(ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest request) {
            return base.Channel.MergeCSVXFilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesResponse> MergeCSVXFilesAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string[] inCSVXFilePaths, string inOutputCSVXPath) {
            ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest inValue = new ArtFactory.Proofer.XmPie.Production.MergeCSVXFilesRequest();
            inValue.XMPUser = XMPUser;
            inValue.inCSVXFilePaths = inCSVXFilePaths;
            inValue.inOutputCSVXPath = inOutputCSVXPath;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).MergeCSVXFilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.AppendCSVXFile(ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest request) {
            return base.Channel.AppendCSVXFile(request);
        }
        
        public bool AppendCSVXFile(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inMainCSVXFilePath, string inSecondaryCSVXFilePath) {
            ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest inValue = new ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest();
            inValue.XMPUser = XMPUser;
            inValue.inMainCSVXFilePath = inMainCSVXFilePath;
            inValue.inSecondaryCSVXFilePath = inSecondaryCSVXFilePath;
            ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).AppendCSVXFile(inValue);
            return retVal.AppendCSVXFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.AppendCSVXFileAsync(ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest request) {
            return base.Channel.AppendCSVXFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.AppendCSVXFileResponse> AppendCSVXFileAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inMainCSVXFilePath, string inSecondaryCSVXFilePath) {
            ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest inValue = new ArtFactory.Proofer.XmPie.Production.AppendCSVXFileRequest();
            inValue.XMPUser = XMPUser;
            inValue.inMainCSVXFilePath = inMainCSVXFilePath;
            inValue.inSecondaryCSVXFilePath = inSecondaryCSVXFilePath;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).AppendCSVXFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest request) {
            return base.Channel.DeployOnDemandJob(request);
        }
        
        public string DeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeployOnDemandJob(inValue);
            return retVal.DeployOnDemandJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest request) {
            return base.Channel.DeployOnDemandJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobResponse> DeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobTicket, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobTicket = inJobTicket;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeployOnDemandJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.UndeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest request) {
            return base.Channel.UndeployOnDemandJob(request);
        }
        
        public bool UndeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).UndeployOnDemandJob(inValue);
            return retVal.UndeployOnDemandJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.UndeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest request) {
            return base.Channel.UndeployOnDemandJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobResponse> UndeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.UndeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).UndeployOnDemandJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.SuspendOnDemandJob(ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest request) {
            return base.Channel.SuspendOnDemandJob(request);
        }
        
        public bool SuspendOnDemandJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SuspendOnDemandJob(inValue);
            return retVal.SuspendOnDemandJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.SuspendOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest request) {
            return base.Channel.SuspendOnDemandJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobResponse> SuspendOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.SuspendOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).SuspendOnDemandJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.ResumeOnDemandJob(ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest request) {
            return base.Channel.ResumeOnDemandJob(request);
        }
        
        public bool ResumeOnDemandJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).ResumeOnDemandJob(inValue);
            return retVal.ResumeOnDemandJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.ResumeOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest request) {
            return base.Channel.ResumeOnDemandJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobResponse> ResumeOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID) {
            ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.ResumeOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).ResumeOnDemandJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.RedeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest request) {
            return base.Channel.RedeployOnDemandJob(request);
        }
        
        public bool RedeployOnDemandJob(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID, string inJobTicket) {
            ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            inValue.inJobTicket = inJobTicket;
            ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).RedeployOnDemandJob(inValue);
            return retVal.RedeployOnDemandJobResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.RedeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest request) {
            return base.Channel.RedeployOnDemandJobAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobResponse> RedeployOnDemandJobAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inJobID, string inJobTicket) {
            ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest inValue = new ArtFactory.Proofer.XmPie.Production.RedeployOnDemandJobRequest();
            inValue.XMPUser = XMPUser;
            inValue.inJobID = inJobID;
            inValue.inJobTicket = inJobTicket;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).RedeployOnDemandJobAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.CreateOnDemandOutput(ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest request) {
            return base.Channel.CreateOnDemandOutput(request);
        }
        
        public string CreateOnDemandOutput(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).CreateOnDemandOutput(inValue);
            return retVal.CreateOnDemandOutputResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.CreateOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest request) {
            return base.Channel.CreateOnDemandOutputAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputResponse> CreateOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, ArtFactory.Proofer.XmPie.Production.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.CreateOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).CreateOnDemandOutputAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.GetOnDemandOutput(ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest request) {
            return base.Channel.GetOnDemandOutput(request);
        }
        
        public ArtFactory.Proofer.XmPie.Production.OnDemandOutputResult GetOnDemandOutput(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inRequestID = inRequestID;
            ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).GetOnDemandOutput(inValue);
            return retVal.GetOnDemandOutputResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.GetOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest request) {
            return base.Channel.GetOnDemandOutputAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputResponse> GetOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.GetOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inRequestID = inRequestID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).GetOnDemandOutputAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeleteOnDemandOutput(ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest request) {
            return base.Channel.DeleteOnDemandOutput(request);
        }
        
        public bool DeleteOnDemandOutput(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inRequestID = inRequestID;
            ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse retVal = ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeleteOnDemandOutput(inValue);
            return retVal.DeleteOnDemandOutputResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse> ArtFactory.Proofer.XmPie.Production.ProductionSoap.DeleteOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest request) {
            return base.Channel.DeleteOnDemandOutputAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputResponse> DeleteOnDemandOutputAsync(ArtFactory.Proofer.XmPie.Production.XMPUser XMPUser, string inRequestID) {
            ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest inValue = new ArtFactory.Proofer.XmPie.Production.DeleteOnDemandOutputRequest();
            inValue.XMPUser = XMPUser;
            inValue.inRequestID = inRequestID;
            return ((ArtFactory.Proofer.XmPie.Production.ProductionSoap)(this)).DeleteOnDemandOutputAsync(inValue);
        }
    }
}
