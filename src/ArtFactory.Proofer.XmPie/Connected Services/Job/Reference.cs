//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtFactory.Proofer.XmPie.Job {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="XMPieWSAPI", ConfigurationName="Job.Job_SSPSoap")]
    public interface Job_SSPSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetFolderPath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFolderPath(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetFolderPath", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFolderPathAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetOutputResults(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResults", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetOutputResultsAsync(string inUsername, string inPassword, string inJobID);
        
        // CODEGEN: Parameter 'inProps' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AddFileToOutputResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse AddFileToOutputResults(ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AddFileToOutputResults", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse> AddFileToOutputResultsAsync(ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest request);
        
        // CODEGEN: Parameter 'inProps' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AddFilesToOutputResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse AddFilesToOutputResults(ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/AddFilesToOutputResults", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse> AddFilesToOutputResultsAsync(ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteOutputResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteOutputResults(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteOutputResults", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteOutputResultsAsync(string inUsername, string inPassword, string inJobID);
        
        // CODEGEN: Parameter 'GetOutputResultsInfoResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse GetOutputResultsInfo(ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultsInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse> GetOutputResultsInfoAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest request);
        
        // CODEGEN: Parameter 'GetOutputResultBinaryFileStreamResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStream", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse GetOutputResultBinaryFileStream(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStream", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse> GetOutputResultBinaryFileStreamAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStreamChunk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkResponse GetOutputResultBinaryFileStreamChunk(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStreamChunk", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkResponse> GetOutputResultBinaryFileStreamChunkAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStreamSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long GetOutputResultBinaryFileStreamSize(string inUsername, string inPassword, string inJobID, int inResultIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultBinaryFileStreamSize", ReplyAction="*")]
        System.Threading.Tasks.Task<long> GetOutputResultBinaryFileStreamSizeAsync(string inUsername, string inPassword, string inJobID, int inResultIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultDownloadURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOutputResultDownloadURL(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetOutputResultDownloadURL", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOutputResultDownloadURLAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.Property GetProperty(string inUsername, string inPassword, string inJobID, string inPropertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetProperty", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.Property> GetPropertyAsync(string inUsername, string inPassword, string inJobID, string inPropertyName);
        
        // CODEGEN: Parameter 'GetPropertiesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse GetProperties(ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse> GetPropertiesAsync(ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest request);
        
        // CODEGEN: Parameter 'GetAllPropertiesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetAllProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse GetAllProperties(ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetAllProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse> GetAllPropertiesAsync(ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDataSet(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataSetAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetXMPTblDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.XMPTblDataSet GetXMPTblDataSet(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetXMPTblDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.XMPTblDataSet> GetXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetProperty(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property inProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProperty", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetPropertyAsync(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property inProp);
        
        // CODEGEN: Parameter 'inProps' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse SetProperties(ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse> SetPropertiesAsync(ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/Abort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Abort(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/Abort", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AbortAsync(string inUsername, string inPassword, string inJobID);
        
        // CODEGEN: Parameter 'inProps' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/ReQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.ReQueueResponse ReQueue(ArtFactory.Proofer.XmPie.Job.ReQueueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/ReQueue", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.ReQueueResponse> ReQueueAsync(ArtFactory.Proofer.XmPie.Job.ReQueueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Delete(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetStatus(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetStatusAsync(string inUsername, string inPassword, string inJobID);
        
        // CODEGEN: Parameter 'inProgressProps' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProgressStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse SetProgressStatus(ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetProgressStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse> SetProgressStatusAsync(ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTicket(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetTicket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTicketAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMessages(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMessagesAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMessagesDataSet(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMessagesDataSetAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesXMPTblDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.XMPTblDataSet GetMessagesXMPTblDataSet(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesXMPTblDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.XMPTblDataSet> GetMessagesXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetMessagesNum(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesNum", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetMessagesNumAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesHighestSeverity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetMessagesHighestSeverity(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetMessagesHighestSeverity", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetMessagesHighestSeverityAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteMessages(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/DeleteMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteMessagesAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetCampaignShortcutInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArtFactory.Proofer.XmPie.Job.CampaignShortcutInfo GetCampaignShortcutInfo(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetCampaignShortcutInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.CampaignShortcutInfo> GetCampaignShortcutInfoAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetTouchPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTouchPoint(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/GetTouchPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTouchPointAsync(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetTouchPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetTouchPoint(string inUsername, string inPassword, string inJobID, string inTouchPointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/SetTouchPoint", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetTouchPointAsync(string inUsername, string inPassword, string inJobID, string inTouchPointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/IsExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsExist(string inUsername, string inPassword, string inJobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="XMPieWSAPI/IsExist", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsExistAsync(string inUsername, string inPassword, string inJobID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class Property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_NameField;
        
        private string m_ValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_Name {
            get {
                return this.m_NameField;
            }
            set {
                this.m_NameField = value;
                this.RaisePropertyChanged("m_Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_Value {
            get {
                return this.m_ValueField;
            }
            set {
                this.m_ValueField = value;
                this.RaisePropertyChanged("m_Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class CampaignShortcutInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_AccountIDField;
        
        private string m_AccountNameField;
        
        private string m_CampaignIDField;
        
        private string m_CampaignNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_AccountID {
            get {
                return this.m_AccountIDField;
            }
            set {
                this.m_AccountIDField = value;
                this.RaisePropertyChanged("m_AccountID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_AccountName {
            get {
                return this.m_AccountNameField;
            }
            set {
                this.m_AccountNameField = value;
                this.RaisePropertyChanged("m_AccountName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string m_CampaignID {
            get {
                return this.m_CampaignIDField;
            }
            set {
                this.m_CampaignIDField = value;
                this.RaisePropertyChanged("m_CampaignID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string m_CampaignName {
            get {
                return this.m_CampaignNameField;
            }
            set {
                this.m_CampaignNameField = value;
                this.RaisePropertyChanged("m_CampaignName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPRowField : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_FieldValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_FieldValue {
            get {
                return this.m_FieldValueField;
            }
            set {
                this.m_FieldValueField = value;
                this.RaisePropertyChanged("m_FieldValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private XMPRowField[] m_FieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPRowField[] m_Fields {
            get {
                return this.m_FieldsField;
            }
            set {
                this.m_FieldsField = value;
                this.RaisePropertyChanged("m_Fields");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblColumn : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_ColumnNameField;
        
        private string m_ColumnTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_ColumnName {
            get {
                return this.m_ColumnNameField;
            }
            set {
                this.m_ColumnNameField = value;
                this.RaisePropertyChanged("m_ColumnName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_ColumnType {
            get {
                return this.m_ColumnTypeField;
            }
            set {
                this.m_ColumnTypeField = value;
                this.RaisePropertyChanged("m_ColumnType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTbl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_TableNameField;
        
        private XMPTblColumn[] m_ColumnNameArrayField;
        
        private XMPTblRow[] m_RowArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_TableName {
            get {
                return this.m_TableNameField;
            }
            set {
                this.m_TableNameField = value;
                this.RaisePropertyChanged("m_TableName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTblColumn[] m_ColumnNameArray {
            get {
                return this.m_ColumnNameArrayField;
            }
            set {
                this.m_ColumnNameArrayField = value;
                this.RaisePropertyChanged("m_ColumnNameArray");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTblRow[] m_RowArray {
            get {
                return this.m_RowArrayField;
            }
            set {
                this.m_RowArrayField = value;
                this.RaisePropertyChanged("m_RowArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class XMPTblDataSet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private XMPTbl[] m_TablesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public XMPTbl[] m_Tables {
            get {
                return this.m_TablesField;
            }
            set {
                this.m_TablesField = value;
                this.RaisePropertyChanged("m_Tables");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="XMPieWSAPI")]
    public partial class OutputResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string m_FileNameField;
        
        private string m_FilePathField;
        
        private double m_SizeKBField;
        
        private string m_ModifDateStrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string m_FileName {
            get {
                return this.m_FileNameField;
            }
            set {
                this.m_FileNameField = value;
                this.RaisePropertyChanged("m_FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string m_FilePath {
            get {
                return this.m_FilePathField;
            }
            set {
                this.m_FilePathField = value;
                this.RaisePropertyChanged("m_FilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double m_SizeKB {
            get {
                return this.m_SizeKBField;
            }
            set {
                this.m_SizeKBField = value;
                this.RaisePropertyChanged("m_SizeKB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string m_ModifDateStr {
            get {
                return this.m_ModifDateStrField;
            }
            set {
                this.m_ModifDateStrField = value;
                this.RaisePropertyChanged("m_ModifDateStr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFileToOutputResults", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AddFileToOutputResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string inFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        public bool inDeleteSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=5)]
        public bool inDeleteEmptySourceFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] inProps;
        
        public AddFileToOutputResultsRequest() {
        }
        
        public AddFileToOutputResultsRequest(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inFilePath = inFilePath;
            this.inDeleteSource = inDeleteSource;
            this.inDeleteEmptySourceFolder = inDeleteEmptySourceFolder;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFileToOutputResultsResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AddFileToOutputResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool AddFileToOutputResultsResult;
        
        public AddFileToOutputResultsResponse() {
        }
        
        public AddFileToOutputResultsResponse(bool AddFileToOutputResultsResult) {
            this.AddFileToOutputResultsResult = AddFileToOutputResultsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFilesToOutputResults", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AddFilesToOutputResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string inSourceFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        public bool inDeleteSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] inProps;
        
        public AddFilesToOutputResultsRequest() {
        }
        
        public AddFilesToOutputResultsRequest(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inSourceFolder = inSourceFolder;
            this.inDeleteSource = inDeleteSource;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFilesToOutputResultsResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class AddFilesToOutputResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool AddFilesToOutputResultsResult;
        
        public AddFilesToOutputResultsResponse() {
        }
        
        public AddFilesToOutputResultsResponse(bool AddFilesToOutputResultsResult) {
            this.AddFilesToOutputResultsResult = AddFilesToOutputResultsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultsInfo", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultsInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        public GetOutputResultsInfoRequest() {
        }
        
        public GetOutputResultsInfoRequest(string inUsername, string inPassword, string inJobID) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultsInfoResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultsInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.OutputResult[] GetOutputResultsInfoResult;
        
        public GetOutputResultsInfoResponse() {
        }
        
        public GetOutputResultsInfoResponse(ArtFactory.Proofer.XmPie.Job.OutputResult[] GetOutputResultsInfoResult) {
            this.GetOutputResultsInfoResult = GetOutputResultsInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultBinaryFileStream", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultBinaryFileStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public int inResultIndex;
        
        public GetOutputResultBinaryFileStreamRequest() {
        }
        
        public GetOutputResultBinaryFileStreamRequest(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inResultIndex = inResultIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultBinaryFileStreamResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultBinaryFileStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOutputResultBinaryFileStreamResult;
        
        public GetOutputResultBinaryFileStreamResponse() {
        }
        
        public GetOutputResultBinaryFileStreamResponse(byte[] GetOutputResultBinaryFileStreamResult) {
            this.GetOutputResultBinaryFileStreamResult = GetOutputResultBinaryFileStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultBinaryFileStreamChunk", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultBinaryFileStreamChunkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public int inResultIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        public uint inOffset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=5)]
        public int inoutCount;
        
        public GetOutputResultBinaryFileStreamChunkRequest() {
        }
        
        public GetOutputResultBinaryFileStreamChunkRequest(string inUsername, string inPassword, string inJobID, int inResultIndex, uint inOffset, int inoutCount) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inResultIndex = inResultIndex;
            this.inOffset = inOffset;
            this.inoutCount = inoutCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutputResultBinaryFileStreamChunkResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetOutputResultBinaryFileStreamChunkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOutputResultBinaryFileStreamChunkResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public int inoutCount;
        
        public GetOutputResultBinaryFileStreamChunkResponse() {
        }
        
        public GetOutputResultBinaryFileStreamChunkResponse(byte[] GetOutputResultBinaryFileStreamChunkResult, int inoutCount) {
            this.GetOutputResultBinaryFileStreamChunkResult = GetOutputResultBinaryFileStreamChunkResult;
            this.inoutCount = inoutCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProperties", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetPropertiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string[] inPropertiesNames;
        
        public GetPropertiesRequest() {
        }
        
        public GetPropertiesRequest(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inPropertiesNames = inPropertiesNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPropertiesResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetPropertiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] GetPropertiesResult;
        
        public GetPropertiesResponse() {
        }
        
        public GetPropertiesResponse(ArtFactory.Proofer.XmPie.Job.Property[] GetPropertiesResult) {
            this.GetPropertiesResult = GetPropertiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllProperties", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetAllPropertiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        public GetAllPropertiesRequest() {
        }
        
        public GetAllPropertiesRequest(string inUsername, string inPassword, string inJobID) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPropertiesResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class GetAllPropertiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] GetAllPropertiesResult;
        
        public GetAllPropertiesResponse() {
        }
        
        public GetAllPropertiesResponse(ArtFactory.Proofer.XmPie.Job.Property[] GetAllPropertiesResult) {
            this.GetAllPropertiesResult = GetAllPropertiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetProperties", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SetPropertiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] inProps;
        
        public SetPropertiesRequest() {
        }
        
        public SetPropertiesRequest(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPropertiesResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SetPropertiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool SetPropertiesResult;
        
        public SetPropertiesResponse() {
        }
        
        public SetPropertiesResponse(bool SetPropertiesResult) {
            this.SetPropertiesResult = SetPropertiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReQueue", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class ReQueueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] inProps;
        
        public ReQueueRequest() {
        }
        
        public ReQueueRequest(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inProps = inProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReQueueResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class ReQueueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool ReQueueResult;
        
        public ReQueueResponse() {
        }
        
        public ReQueueResponse(bool ReQueueResult) {
            this.ReQueueResult = ReQueueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetProgressStatus", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SetProgressStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public string inUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=1)]
        public string inPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=2)]
        public string inJobID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=3)]
        public string inProgressMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArtFactory.Proofer.XmPie.Job.Property[] inProgressProps;
        
        public SetProgressStatusRequest() {
        }
        
        public SetProgressStatusRequest(string inUsername, string inPassword, string inJobID, string inProgressMethod, ArtFactory.Proofer.XmPie.Job.Property[] inProgressProps) {
            this.inUsername = inUsername;
            this.inPassword = inPassword;
            this.inJobID = inJobID;
            this.inProgressMethod = inProgressMethod;
            this.inProgressProps = inProgressProps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetProgressStatusResponse", WrapperNamespace="XMPieWSAPI", IsWrapped=true)]
    public partial class SetProgressStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="XMPieWSAPI", Order=0)]
        public bool SetProgressStatusResult;
        
        public SetProgressStatusResponse() {
        }
        
        public SetProgressStatusResponse(bool SetProgressStatusResult) {
            this.SetProgressStatusResult = SetProgressStatusResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Job_SSPSoapChannel : ArtFactory.Proofer.XmPie.Job.Job_SSPSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Job_SSPSoapClient : System.ServiceModel.ClientBase<ArtFactory.Proofer.XmPie.Job.Job_SSPSoap>, ArtFactory.Proofer.XmPie.Job.Job_SSPSoap {
        
        public Job_SSPSoapClient() {
        }
        
        public Job_SSPSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Job_SSPSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Job_SSPSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Job_SSPSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetFolderPath(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetFolderPath(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<string> GetFolderPathAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetFolderPathAsync(inUsername, inPassword, inJobID);
        }
        
        public string[] GetOutputResults(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetOutputResults(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetOutputResultsAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetOutputResultsAsync(inUsername, inPassword, inJobID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.AddFileToOutputResults(ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest request) {
            return base.Channel.AddFileToOutputResults(request);
        }
        
        public bool AddFileToOutputResults(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest inValue = new ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inFilePath = inFilePath;
            inValue.inDeleteSource = inDeleteSource;
            inValue.inDeleteEmptySourceFolder = inDeleteEmptySourceFolder;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).AddFileToOutputResults(inValue);
            return retVal.AddFileToOutputResultsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.AddFileToOutputResultsAsync(ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest request) {
            return base.Channel.AddFileToOutputResultsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsResponse> AddFileToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inFilePath, bool inDeleteSource, bool inDeleteEmptySourceFolder, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest inValue = new ArtFactory.Proofer.XmPie.Job.AddFileToOutputResultsRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inFilePath = inFilePath;
            inValue.inDeleteSource = inDeleteSource;
            inValue.inDeleteEmptySourceFolder = inDeleteEmptySourceFolder;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).AddFileToOutputResultsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.AddFilesToOutputResults(ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest request) {
            return base.Channel.AddFilesToOutputResults(request);
        }
        
        public bool AddFilesToOutputResults(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest inValue = new ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inSourceFolder = inSourceFolder;
            inValue.inDeleteSource = inDeleteSource;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).AddFilesToOutputResults(inValue);
            return retVal.AddFilesToOutputResultsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.AddFilesToOutputResultsAsync(ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest request) {
            return base.Channel.AddFilesToOutputResultsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsResponse> AddFilesToOutputResultsAsync(string inUsername, string inPassword, string inJobID, string inSourceFolder, bool inDeleteSource, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest inValue = new ArtFactory.Proofer.XmPie.Job.AddFilesToOutputResultsRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inSourceFolder = inSourceFolder;
            inValue.inDeleteSource = inDeleteSource;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).AddFilesToOutputResultsAsync(inValue);
        }
        
        public bool DeleteOutputResults(string inUsername, string inPassword, string inJobID) {
            return base.Channel.DeleteOutputResults(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOutputResultsAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.DeleteOutputResultsAsync(inUsername, inPassword, inJobID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetOutputResultsInfo(ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest request) {
            return base.Channel.GetOutputResultsInfo(request);
        }
        
        public ArtFactory.Proofer.XmPie.Job.OutputResult[] GetOutputResultsInfo(string inUsername, string inPassword, string inJobID) {
            ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetOutputResultsInfo(inValue);
            return retVal.GetOutputResultsInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetOutputResultsInfoAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest request) {
            return base.Channel.GetOutputResultsInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoResponse> GetOutputResultsInfoAsync(string inUsername, string inPassword, string inJobID) {
            ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetOutputResultsInfoRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetOutputResultsInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetOutputResultBinaryFileStream(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest request) {
            return base.Channel.GetOutputResultBinaryFileStream(request);
        }
        
        public byte[] GetOutputResultBinaryFileStream(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inResultIndex = inResultIndex;
            ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetOutputResultBinaryFileStream(inValue);
            return retVal.GetOutputResultBinaryFileStreamResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetOutputResultBinaryFileStreamAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest request) {
            return base.Channel.GetOutputResultBinaryFileStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamResponse> GetOutputResultBinaryFileStreamAsync(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inResultIndex = inResultIndex;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetOutputResultBinaryFileStreamAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetOutputResultBinaryFileStreamChunk(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest request) {
            return base.Channel.GetOutputResultBinaryFileStreamChunk(request);
        }
        
        public byte[] GetOutputResultBinaryFileStreamChunk(string inUsername, string inPassword, string inJobID, int inResultIndex, uint inOffset, ref int inoutCount) {
            ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inResultIndex = inResultIndex;
            inValue.inOffset = inOffset;
            inValue.inoutCount = inoutCount;
            ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetOutputResultBinaryFileStreamChunk(inValue);
            inoutCount = retVal.inoutCount;
            return retVal.GetOutputResultBinaryFileStreamChunkResult;
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkResponse> GetOutputResultBinaryFileStreamChunkAsync(ArtFactory.Proofer.XmPie.Job.GetOutputResultBinaryFileStreamChunkRequest request) {
            return base.Channel.GetOutputResultBinaryFileStreamChunkAsync(request);
        }
        
        public long GetOutputResultBinaryFileStreamSize(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            return base.Channel.GetOutputResultBinaryFileStreamSize(inUsername, inPassword, inJobID, inResultIndex);
        }
        
        public System.Threading.Tasks.Task<long> GetOutputResultBinaryFileStreamSizeAsync(string inUsername, string inPassword, string inJobID, int inResultIndex) {
            return base.Channel.GetOutputResultBinaryFileStreamSizeAsync(inUsername, inPassword, inJobID, inResultIndex);
        }
        
        public string GetOutputResultDownloadURL(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL) {
            return base.Channel.GetOutputResultDownloadURL(inUsername, inPassword, inJobID, inResultIndex, inMimeType, inIsInline, inMacTypeHex, inMacCreatorHex, inReturnInternalURL);
        }
        
        public System.Threading.Tasks.Task<string> GetOutputResultDownloadURLAsync(string inUsername, string inPassword, string inJobID, int inResultIndex, string inMimeType, bool inIsInline, string inMacTypeHex, string inMacCreatorHex, bool inReturnInternalURL) {
            return base.Channel.GetOutputResultDownloadURLAsync(inUsername, inPassword, inJobID, inResultIndex, inMimeType, inIsInline, inMacTypeHex, inMacCreatorHex, inReturnInternalURL);
        }
        
        public ArtFactory.Proofer.XmPie.Job.Property GetProperty(string inUsername, string inPassword, string inJobID, string inPropertyName) {
            return base.Channel.GetProperty(inUsername, inPassword, inJobID, inPropertyName);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.Property> GetPropertyAsync(string inUsername, string inPassword, string inJobID, string inPropertyName) {
            return base.Channel.GetPropertyAsync(inUsername, inPassword, inJobID, inPropertyName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetProperties(ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest request) {
            return base.Channel.GetProperties(request);
        }
        
        public ArtFactory.Proofer.XmPie.Job.Property[] GetProperties(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames) {
            ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inPropertiesNames = inPropertiesNames;
            ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetProperties(inValue);
            return retVal.GetPropertiesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetPropertiesAsync(ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest request) {
            return base.Channel.GetPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetPropertiesResponse> GetPropertiesAsync(string inUsername, string inPassword, string inJobID, string[] inPropertiesNames) {
            ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inPropertiesNames = inPropertiesNames;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetPropertiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetAllProperties(ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest request) {
            return base.Channel.GetAllProperties(request);
        }
        
        public ArtFactory.Proofer.XmPie.Job.Property[] GetAllProperties(string inUsername, string inPassword, string inJobID) {
            ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetAllProperties(inValue);
            return retVal.GetAllPropertiesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.GetAllPropertiesAsync(ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest request) {
            return base.Channel.GetAllPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.GetAllPropertiesResponse> GetAllPropertiesAsync(string inUsername, string inPassword, string inJobID) {
            ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.GetAllPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).GetAllPropertiesAsync(inValue);
        }
        
        public System.Data.DataSet GetDataSet(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetDataSet(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataSetAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetDataSetAsync(inUsername, inPassword, inJobID);
        }
        
        public ArtFactory.Proofer.XmPie.Job.XMPTblDataSet GetXMPTblDataSet(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetXMPTblDataSet(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.XMPTblDataSet> GetXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetXMPTblDataSetAsync(inUsername, inPassword, inJobID);
        }
        
        public bool SetProperty(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property inProp) {
            return base.Channel.SetProperty(inUsername, inPassword, inJobID, inProp);
        }
        
        public System.Threading.Tasks.Task<bool> SetPropertyAsync(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property inProp) {
            return base.Channel.SetPropertyAsync(inUsername, inPassword, inJobID, inProp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.SetProperties(ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest request) {
            return base.Channel.SetProperties(request);
        }
        
        public bool SetProperties(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).SetProperties(inValue);
            return retVal.SetPropertiesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.SetPropertiesAsync(ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest request) {
            return base.Channel.SetPropertiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetPropertiesResponse> SetPropertiesAsync(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest inValue = new ArtFactory.Proofer.XmPie.Job.SetPropertiesRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).SetPropertiesAsync(inValue);
        }
        
        public bool Abort(string inUsername, string inPassword, string inJobID) {
            return base.Channel.Abort(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<bool> AbortAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.AbortAsync(inUsername, inPassword, inJobID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.ReQueueResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.ReQueue(ArtFactory.Proofer.XmPie.Job.ReQueueRequest request) {
            return base.Channel.ReQueue(request);
        }
        
        public bool ReQueue(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.ReQueueRequest inValue = new ArtFactory.Proofer.XmPie.Job.ReQueueRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProps = inProps;
            ArtFactory.Proofer.XmPie.Job.ReQueueResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).ReQueue(inValue);
            return retVal.ReQueueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.ReQueueResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.ReQueueAsync(ArtFactory.Proofer.XmPie.Job.ReQueueRequest request) {
            return base.Channel.ReQueueAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.ReQueueResponse> ReQueueAsync(string inUsername, string inPassword, string inJobID, ArtFactory.Proofer.XmPie.Job.Property[] inProps) {
            ArtFactory.Proofer.XmPie.Job.ReQueueRequest inValue = new ArtFactory.Proofer.XmPie.Job.ReQueueRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProps = inProps;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).ReQueueAsync(inValue);
        }
        
        public bool Delete(string inUsername, string inPassword, string inJobID) {
            return base.Channel.Delete(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.DeleteAsync(inUsername, inPassword, inJobID);
        }
        
        public int GetStatus(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetStatus(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<int> GetStatusAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetStatusAsync(inUsername, inPassword, inJobID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.SetProgressStatus(ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest request) {
            return base.Channel.SetProgressStatus(request);
        }
        
        public bool SetProgressStatus(string inUsername, string inPassword, string inJobID, string inProgressMethod, ArtFactory.Proofer.XmPie.Job.Property[] inProgressProps) {
            ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest inValue = new ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProgressMethod = inProgressMethod;
            inValue.inProgressProps = inProgressProps;
            ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse retVal = ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).SetProgressStatus(inValue);
            return retVal.SetProgressStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse> ArtFactory.Proofer.XmPie.Job.Job_SSPSoap.SetProgressStatusAsync(ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest request) {
            return base.Channel.SetProgressStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.SetProgressStatusResponse> SetProgressStatusAsync(string inUsername, string inPassword, string inJobID, string inProgressMethod, ArtFactory.Proofer.XmPie.Job.Property[] inProgressProps) {
            ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest inValue = new ArtFactory.Proofer.XmPie.Job.SetProgressStatusRequest();
            inValue.inUsername = inUsername;
            inValue.inPassword = inPassword;
            inValue.inJobID = inJobID;
            inValue.inProgressMethod = inProgressMethod;
            inValue.inProgressProps = inProgressProps;
            return ((ArtFactory.Proofer.XmPie.Job.Job_SSPSoap)(this)).SetProgressStatusAsync(inValue);
        }
        
        public string GetTicket(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetTicket(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<string> GetTicketAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetTicketAsync(inUsername, inPassword, inJobID);
        }
        
        public string[] GetMessages(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessages(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMessagesAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesAsync(inUsername, inPassword, inJobID);
        }
        
        public System.Data.DataSet GetMessagesDataSet(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesDataSet(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMessagesDataSetAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesDataSetAsync(inUsername, inPassword, inJobID);
        }
        
        public ArtFactory.Proofer.XmPie.Job.XMPTblDataSet GetMessagesXMPTblDataSet(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesXMPTblDataSet(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.XMPTblDataSet> GetMessagesXMPTblDataSetAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesXMPTblDataSetAsync(inUsername, inPassword, inJobID);
        }
        
        public int GetMessagesNum(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesNum(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<int> GetMessagesNumAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesNumAsync(inUsername, inPassword, inJobID);
        }
        
        public int GetMessagesHighestSeverity(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesHighestSeverity(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<int> GetMessagesHighestSeverityAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetMessagesHighestSeverityAsync(inUsername, inPassword, inJobID);
        }
        
        public bool DeleteMessages(string inUsername, string inPassword, string inJobID) {
            return base.Channel.DeleteMessages(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMessagesAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.DeleteMessagesAsync(inUsername, inPassword, inJobID);
        }
        
        public ArtFactory.Proofer.XmPie.Job.CampaignShortcutInfo GetCampaignShortcutInfo(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetCampaignShortcutInfo(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<ArtFactory.Proofer.XmPie.Job.CampaignShortcutInfo> GetCampaignShortcutInfoAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetCampaignShortcutInfoAsync(inUsername, inPassword, inJobID);
        }
        
        public string GetTouchPoint(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetTouchPoint(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<string> GetTouchPointAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.GetTouchPointAsync(inUsername, inPassword, inJobID);
        }
        
        public bool SetTouchPoint(string inUsername, string inPassword, string inJobID, string inTouchPointID) {
            return base.Channel.SetTouchPoint(inUsername, inPassword, inJobID, inTouchPointID);
        }
        
        public System.Threading.Tasks.Task<bool> SetTouchPointAsync(string inUsername, string inPassword, string inJobID, string inTouchPointID) {
            return base.Channel.SetTouchPointAsync(inUsername, inPassword, inJobID, inTouchPointID);
        }
        
        public bool IsExist(string inUsername, string inPassword, string inJobID) {
            return base.Channel.IsExist(inUsername, inPassword, inJobID);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistAsync(string inUsername, string inPassword, string inJobID) {
            return base.Channel.IsExistAsync(inUsername, inPassword, inJobID);
        }
    }
}
